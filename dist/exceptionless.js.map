{"version":3,"sources":["tracekit.js","/source/exceptionless.ts"],"names":[],"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","file":"exceptionless.js","sourcesContent":["/**\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\n(function(window, undefined) {\nif (!window) {\n    return;\n}\n\nvar TraceKit = {};\nvar _oldTraceKit = window.TraceKit;\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n\n/**\n * Returns true if the parameter is undefined<br/>\n * Example: `_isUndefined(val) === true/false`\n *\n * @param {*} what Value to check\n * @return {Boolean} true if undefined and false otherwise\n */\nfunction _isUndefined(what) {\n    return typeof what === 'undefined';\n}\n\n/**\n * Export TraceKit out to another variable<br/>\n * Example: `var TK = TraceKit.noConflict()`\n * @return {Object} The TraceKit object\n * @memberof TraceKit\n */\nTraceKit.noConflict = function noConflict() {\n    window.TraceKit = _oldTraceKit;\n    return TraceKit;\n};\n\n/**\n * Wrap any function in a TraceKit reporter<br/>\n * Example: `func = TraceKit.wrap(func);`\n *\n * @param {Function} func Function to be wrapped\n * @return {Function} The wrapped func\n * @memberof TraceKit\n */\nTraceKit.wrap = function traceKitWrapper(func) {\n    function wrapped() {\n        try {\n            return func.apply(this, arguments);\n        } catch (e) {\n            TraceKit.report(e);\n            throw e;\n        }\n    }\n    return wrapped;\n};\n\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit.computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastArgs = null,\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     * @memberof TraceKit.report\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     * @memberof TraceKit.report\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {TraceKit.StackTrace} stack\n     * @param {boolean} isWindowError Is this a top-level window error?\n     * @memberof TraceKit.report\n     * @throws An exception if an error occurs while calling an handler.\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error occurred.\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\n     * @param {Error=} errorObj The actual Error object.\n     * @memberof TraceKit.report\n     */\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n\n        if (lastExceptionStack) {\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n    \t    processLastException();\n\t    } else if (errorObj) {\n            stack = TraceKit.computeStackTrace(errorObj);\n            notifyHandlers(stack, true);\n        } else {\n            var location = {\n              'url': url,\n              'line': lineNo,\n              'column': columnNo\n            };\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n            stack = {\n              'mode': 'onerror',\n              'message': message,\n              'stack': [location]\n            };\n\n            notifyHandlers(stack, true);\n        }\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    /**\n     * Install a global onerror handler\n     * @memberof TraceKit.report\n     */\n    function installGlobalHandler () {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    /**\n     * Process the most recent exception\n     * @memberof TraceKit.report\n     */\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack,\n            _lastArgs = lastArgs;\n        lastArgs = null;\n        lastExceptionStack = null;\n        lastException = null;\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @memberof TraceKit.report\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n     */\n    function report(ex) {\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n              processLastException();\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        lastArgs = _slice.call(arguments, 1);\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    return report;\n}());\n\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n *  ```js\n *     function trace(message) {\n *         var stackInfo = TraceKit.computeStackTrace.ofCaller();\n *         var data = message + \"\\n\";\n *         for(var i in stackInfo.stack) {\n *             var item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n * ```\n * @memberof TraceKit\n * @namespace\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var debug = false,\n        sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function loadSource(url) {\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function getSource(url) {\n        if (typeof url !== 'string') {\n            return [];\n        }\n\n        if (!_has(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            /*\n                Regex matches:\n                0 - Full Url\n                1 - Protocol\n                2 - Domain\n                3 - Port (Useful for internal applications)\n                4 - Path\n            */\n            var source = '';\n            var domain = '';\n            try { domain = window.document.domain; } catch (e) { }\n            var match = /(.*)\\:\\/\\/([^:\\/]+)([:\\d]*)\\/{0,1}([\\s\\S]*)/.exec(url);\n            if (match && match[2] === domain) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!_isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!_isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function findSourceByFunctionBody(func) {\n        if (_isUndefined(window && window.document)) {\n            return;\n        }\n\n        var urls = [window.location.href],\n            scripts = window.document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (!ex.stack) {\n            return null;\n        }\n\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|https?|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\n                element = {\n                    'url': !isNative ? parts[2] : null,\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': isNative ? [parts[2]] : [],\n                    'line': parts[3] ? +parts[3] : null,\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ( parts = winjs.exec(lines[i]) ) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': [],\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : [],\n                    'line': parts[4] ? +parts[4] : null,\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && !_isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'mode': 'stack',\n            'name': ex.name,\n            'message': ex.message,\n            'stack': stack\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10+ uses this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (!stacktrace) {\n            return;\n        }\n\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\n            opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\n            lines = stacktrace.split('\\n'),\n            stack = [],\n            parts;\n\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[2],\n                    'line': +parts[1],\n                    'column': null,\n                    'func': parts[3],\n                    'args':[]\n                };\n            } else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[6],\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : []\n                };\n            }\n\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'mode': 'stacktrace',\n            'name': ex.name,\n            'message': ex.message,\n            'stack': stack\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack information.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // TODO: Clean this function up\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = (window && window.document && window.document.getElementsByTagName('script')),\n            inlineScriptBlocks = [],\n            parts;\n\n        for (var s in scripts) {\n            if (_has(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null\n                };\n            } else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    var source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = window.location.href.replace(/#.*$/, '');\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\n                var src = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'func': '',\n                    'args': [],\n                    'line': src ? src.line : parts[1],\n                    'column': null\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[line + 1]];\n                }\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'mode': 'multiline',\n            'name': ex.name,\n            'message': lines[0],\n            'stack': stack\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {TraceKit.StackTrace=} Stack trace information.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'args': [],\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'mode': 'callers',\n            'name': ex.name,\n            'message': ex.message,\n            'stack': stack\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     * @memberof TraceKit.computeStackTrace\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'mode': 'failed'\n        };\n    }\n\n    /**\n     * Logs a stacktrace starting from the previous call and working down.\n     * @param {(number|string)=} depth How many frames deep to trace.\n     * @return {TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit.computeStackTrace\n     */\n    function computeStackTraceOfCaller(depth) {\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n        try {\n            throw new Error();\n        } catch (ex) {\n            return computeStackTrace(ex, depth + 1);\n        }\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\n    computeStackTrace.getSource = getSource;\n\n    return computeStackTrace;\n}());\n\n/**\n * Extends support for global error handling for asynchronous browser\n * functions. Adopted from Closure Library's errorhandler.js\n * @memberof TraceKit\n */\nTraceKit.extendToAsynchronousCallbacks = function () {\n    var _helper = function _helper(fnName) {\n        var originalFn = window[fnName];\n        window[fnName] = function traceKitAsyncExtension() {\n            // Make a copy of the arguments\n            var args = _slice.call(arguments);\n            var originalCallback = args[0];\n            if (typeof (originalCallback) === 'function') {\n                args[0] = TraceKit.wrap(originalCallback);\n            }\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\n            // can just call the original function directly.\n            if (originalFn.apply) {\n                return originalFn.apply(this, args);\n            } else {\n                return originalFn(args[0], args[1]);\n            }\n        };\n    };\n\n    _helper('setTimeout');\n    _helper('setInterval');\n};\n\n//Default options:\nif (!TraceKit.remoteFetching) {\n    TraceKit.remoteFetching = true;\n}\nif (!TraceKit.collectWindowErrors) {\n    TraceKit.collectWindowErrors = true;\n}\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\n    // 5 lines before, the offending line, 5 lines after\n    TraceKit.linesOfContext = 11;\n}\n\n// UMD export\nif (typeof module !== 'undefined' && module.exports && this.module !== module) {\n    module.exports = TraceKit;\n} else if (typeof define === 'function' && define.amd) {\n    define('TraceKit', [], TraceKit);\n} else {\n    window.TraceKit = TraceKit;\n}\n\n}(typeof window !== 'undefined' ? window : global));\n","import * as TraceKit from 'TraceKit';\nexport interface IEvent {\r\n  type?: string;\r\n  source?: string;\r\n  date?: Date;\r\n  tags?: string[];\r\n  message?: string;\r\n  geo?: string;\r\n  value?: number;\r\n  data?: any;\r\n  reference_id?: string;\r\n  count?: number;\r\n}\r\n\nexport class SubmissionResponse {\r\n  public success: boolean = false;\r\n  public badRequest: boolean = false;\r\n  public serviceUnavailable: boolean = false;\r\n  public paymentRequired: boolean = false;\r\n  public unableToAuthenticate: boolean = false;\r\n  public notFound: boolean = false;\r\n  public requestEntityTooLarge: boolean = false;\r\n  public statusCode: number;\r\n  public message: string;\r\n\r\n  constructor(statusCode: number, message?: string) {\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n\r\n    this.success = statusCode >= 200 && statusCode <= 299;\r\n    this.badRequest = statusCode === 400;\r\n    this.serviceUnavailable = statusCode === 503;\r\n    this.paymentRequired = statusCode === 402;\r\n    this.unableToAuthenticate = statusCode === 401 || statusCode === 403;\r\n    this.notFound = statusCode === 404;\r\n    this.requestEntityTooLarge = statusCode === 413;\r\n  }\r\n}\r\n\nexport interface ILastReferenceIdManager {\r\n  getLast(): string;\r\n  clearLast(): void;\r\n  setLast(eventId: string): void;\r\n}\r\n\nexport interface ILog {\r\n  trace(message: string): void;\r\n  info(message: string): void;\r\n  warn(message: string): void;\r\n  error(message: string): void;\r\n}\r\n\n                                                                                                                  \r\n\r\nexport interface IEventQueue {\r\n  enqueue(event: IEvent): void;\r\n  process(isAppExiting?: boolean): void;\r\n  suspendProcessing(durationInMinutes?: number, discardFutureQueuedItems?: boolean, clearQueue?: boolean): void;\r\n  onEventsPosted(handler: (events: IEvent[], response: SubmissionResponse) => void): void;\r\n}\r\n\n                                                                                                                                   \r\n\r\nexport interface IEnvironmentInfoCollector {\r\n  getEnvironmentInfo(context: EventPluginContext): IEnvironmentInfo;\r\n}\r\n\n                                                                                                               \r\n\r\nexport interface IErrorParser {\r\n  parse(context: EventPluginContext, exception: Error): IError;\r\n}\r\n\n                                                                                                                 \r\n\r\nexport interface IModuleCollector {\r\n  getModules(context: EventPluginContext): IModule[];\r\n}\r\n\n                                                                                                                           \r\n\r\nexport interface IRequestInfoCollector {\r\n  getRequestInfo(context: EventPluginContext): IRequestInfo;\r\n}\r\n\n                                      \r\n\r\nexport interface IStorageProvider {\r\n  queue: IStorage;\r\n  settings: IStorage;\r\n}\r\n\n                                                                                                                    \r\n\r\nexport interface ISubmissionAdapter {\r\n  sendRequest(request: SubmissionRequest, callback?: SubmissionCallback, isAppExiting?: boolean): void;\r\n}\r\n\n                                                                                                                                                                                                                                                                                               \r\n\r\nexport interface ISubmissionClient {\r\n  postEvents(events: IEvent[], config: Configuration, callback: (response: SubmissionResponse) => void, isAppExiting?: boolean): void;\r\n  postUserDescription(referenceId: string, description: IUserDescription, config: Configuration, callback: (response: SubmissionResponse) => void): void;\r\n  getSettings(config: Configuration, version: number, callback: (response: SettingsResponse) => void): void;\r\n  sendHeartbeat(sessionIdOrUserId: string, closeSession: boolean, config: Configuration): void;\r\n}\r\n\nr\n\r\nexport interface IConfigurationSettings {\r\n  apiKey?: string;\r\n  serverUrl?: string;\r\n  heartbeatServerUrl?: string;\r\n  updateSettingsWhenIdleInterval?: number;\r\n  environmentInfoCollector?: IEnvironmentInfoCollector;\r\n  errorParser?: IErrorParser;\r\n  lastReferenceIdManager?: ILastReferenceIdManager;\r\n  log?: ILog;\r\n  moduleCollector?: IModuleCollector;\r\n  requestInfoCollector?: IRequestInfoCollector;\r\n  submissionBatchSize?: number;\r\n  submissionClient?: ISubmissionClient;\r\n  submissionAdapter?: ISubmissionAdapter;\r\n  storage?: IStorageProvider;\r\n  queue?: IEventQueue;\r\n}\r\n\n                                                                                                                                                       \r\n\r\ninterface ISettingsWithVersion {\r\n  version: number;\r\n  settings: { [key: string]: string };\r\n}\r\n\r\nexport class SettingsManager {\r\n  /**\r\n   * A list of handlers that will be fired when the settings change.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private static _handlers: { (config: Configuration): void }[] = [];\r\n\r\n  public static onChanged(handler: (config: Configuration) => void) {\r\n    !!handler && this._handlers.push(handler);\r\n  }\r\n\r\n  public static applySavedServerSettings(config: Configuration): void {\r\n    if (!config || !config.isValid) {\r\n      return;\r\n    }\r\n\r\n    let savedSettings = this.getSavedServerSettings(config);\r\n    config.log.info(`Applying saved settings: v${savedSettings.version}`);\r\n    config.settings = Utils.merge(config.settings, savedSettings.settings);\r\n    this.changed(config);\r\n  }\r\n\r\n  public static getVersion(config: Configuration): number {\r\n    if (!config || !config.isValid) {\r\n      return 0;\r\n    }\r\n\r\n    let savedSettings = this.getSavedServerSettings(config);\r\n    return savedSettings.version || 0;\r\n  }\r\n\r\n  public static checkVersion(version: number, config: Configuration): void {\r\n    let currentVersion: number = this.getVersion(config);\r\n    if (version <= currentVersion) {\r\n      return;\r\n    }\r\n\r\n    config.log.info(`Updating settings from v${currentVersion} to v${version}`);\r\n    this.updateSettings(config, currentVersion);\r\n  }\r\n\r\n  public static updateSettings(config: Configuration, version?: number): void {\r\n    if (!config || !config.enabled) {\r\n      return;\r\n    }\r\n\r\n    let unableToUpdateMessage = 'Unable to update settings';\r\n    if (!config.isValid) {\r\n      config.log.error(`${unableToUpdateMessage}: ApiKey is not set.`);\r\n      return;\r\n    }\r\n\r\n    if (!version || version < 0) {\r\n      version = this.getVersion(config);\r\n    }\r\n\r\n    config.log.info(`Checking for updated settings from: v${version}.`);\r\n    config.submissionClient.getSettings(config, version, (response: SettingsResponse) => {\r\n      if (!config || !response || !response.success || !response.settings) {\r\n        config.log.warn(`${unableToUpdateMessage}: ${response.message}`);\r\n        return;\r\n      }\r\n\r\n      config.settings = Utils.merge(config.settings, response.settings);\r\n\r\n      // TODO: Store snapshot of settings after reading from config and attributes and use that to revert to defaults.\r\n      // Remove any existing server settings that are not in the new server settings.\r\n      let savedServerSettings = SettingsManager.getSavedServerSettings(config);\r\n      for (let key in savedServerSettings) {\r\n        if (response.settings[key]) {\r\n          continue;\r\n        }\r\n\r\n        delete config.settings[key];\r\n      }\r\n\r\n      let newSettings = <ISettingsWithVersion>{\r\n        version: response.settingsVersion,\r\n        settings: response.settings\r\n      };\r\n\r\n      config.storage.settings.save(newSettings);\r\n\r\n      config.log.info(`Updated settings: v${newSettings.version}`);\r\n      this.changed(config);\r\n    });\r\n  }\r\n\r\n  private static changed(config: Configuration) {\r\n    let handlers = this._handlers; // optimization for minifier.\r\n    for (let index = 0; index < handlers.length; index++) {\r\n      try {\r\n        handlers[index](config);\r\n      } catch (ex) {\r\n        config.log.error(`Error calling onChanged handler: ${ex}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static getSavedServerSettings(config: Configuration): ISettingsWithVersion {\r\n    let item = config.storage.settings.get()[0];\r\n    if (item && item.value && item.value.version && item.value.settings) {\r\n      return item.value;\r\n    }\r\n\r\n    return { version: 0, settings: {} };\r\n  }\r\n}\r\n\n                                                                    \r\n\r\nexport class DefaultLastReferenceIdManager implements ILastReferenceIdManager {\r\n  /**\r\n   * Gets the last event's reference id that was submitted to the server.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _lastReferenceId: string = null;\r\n\r\n  /**\r\n   * Gets the last event's reference id that was submitted to the server.\r\n   * @returns {string}\r\n   */\r\n  public getLast(): string {\r\n    return this._lastReferenceId;\r\n  }\r\n\r\n  /**\r\n   * Clears the last event's reference id.\r\n   */\r\n  public clearLast(): void {\r\n    this._lastReferenceId = null;\r\n  }\r\n\r\n  /**\r\n   * Sets the last event's reference id.\r\n   * @param eventId\r\n   */\r\n  public setLast(eventId: string): void {\r\n    this._lastReferenceId = eventId;\r\n  }\r\n}\r\n\n                              \r\n\r\nexport class ConsoleLog implements ILog {\r\n  public trace(message: string): void {\r\n    this.log('trace', message);\r\n  }\r\n\r\n  public info(message: string): void {\r\n    this.log('info', message);\r\n  }\r\n\r\n  public warn(message: string): void {\r\n    this.log('warn', message);\r\n  }\r\n\r\n  public error(message: string): void {\r\n    this.log('error', message);\r\n  }\r\n\r\n  private log(level: string, message: string) {\r\n    if (console) {\r\n      let msg = `[${level}] Exceptionless: ${message}`;\r\n\r\n      if (console[level]) {\r\n        console[level](msg);\r\n      } else if (console.log) {\r\n        console[`log`](msg);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n                              \r\n\r\nexport class NullLog implements ILog {\r\n  public trace(message: string): void { }\r\n  public info(message: string): void { }\r\n  public warn(message: string): void { }\r\n  public error(message: string): void { }\r\n}\r\n\nexport interface IUserInfo {\r\n  identity?: string;\r\n  name?: string;\r\n  data?: any;\r\n}\r\n\n                                                                                                          \r\n\r\nexport interface IEventPlugin {\r\n  priority?: number;\r\n  name?: string;\r\n  run(context: EventPluginContext, next?: () => void): void;\r\n}\r\n\n                                                                                                                                                                                                \r\n\r\nexport class EventPluginContext {\r\n  public cancelled: boolean;\r\n  public client: ExceptionlessClient;\r\n  public event: IEvent;\r\n  public contextData: ContextData;\r\n\r\n  constructor(client: ExceptionlessClient, event: IEvent, contextData?: ContextData) {\r\n    this.client = client;\r\n    this.event = event;\r\n    this.contextData = contextData ? contextData : new ContextData();\r\n  }\r\n\r\n  public get log(): ILog {\r\n    return this.client.config.log;\r\n  }\r\n}\r\n\nr\n\r\nexport class EventPluginManager {\r\n  public static run(context: EventPluginContext, callback: (context?: EventPluginContext) => void): void {\r\n    let wrap = function(plugin: IEventPlugin, next?: () => void): () => void {\r\n      return () => {\r\n        try {\r\n          if (!context.cancelled) {\r\n            plugin.run(context, next);\r\n          }\r\n        } catch (ex) {\r\n          context.cancelled = true;\r\n          context.log.error(`Error running plugin '${plugin.name}': ${ex.message}. Discarding Event.`);\r\n        }\r\n\r\n        if (context.cancelled && !!callback) {\r\n          callback(context);\r\n        }\r\n      };\r\n    };\r\n\r\n    let plugins: IEventPlugin[] = context.client.config.plugins; // optimization for minifier.\r\n    let wrappedPlugins: { (): void }[] = [];\r\n    if (!!callback) {\r\n      wrappedPlugins[plugins.length] = wrap({ name: 'cb', priority: 9007199254740992, run: callback }, null);\r\n    }\r\n\r\n    for (let index = plugins.length - 1; index > -1; index--) {\r\n      wrappedPlugins[index] = wrap(plugins[index], !!callback || (index < plugins.length - 1) ? wrappedPlugins[index + 1] : null);\r\n    }\r\n\r\n    wrappedPlugins[0]();\r\n  }\r\n\r\n  public static addDefaultPlugins(config: Configuration): void {\r\n    config.addPlugin(new ConfigurationDefaultsPlugin());\r\n    config.addPlugin(new ErrorPlugin());\r\n    config.addPlugin(new DuplicateCheckerPlugin());\r\n    config.addPlugin(new EventExclusionPlugin());\r\n    config.addPlugin(new ModuleInfoPlugin());\r\n    config.addPlugin(new RequestInfoPlugin());\r\n    config.addPlugin(new EnvironmentInfoPlugin());\r\n    config.addPlugin(new SubmissionMethodPlugin());\r\n  }\r\n}\r\n\n                                                                                                                                                                 \r\n\r\nexport class HeartbeatPlugin implements IEventPlugin {\r\n  public priority: number = 100;\r\n  public name: string = 'HeartbeatPlugin';\r\n\r\n  private _interval: number;\r\n  private _intervalId: any;\r\n\r\n  constructor (heartbeatInterval: number = 30000) {\r\n    this._interval = heartbeatInterval;\r\n  }\r\n\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    clearInterval(this._intervalId);\r\n\r\n    let user: IUserInfo = context.event.data['@user'];\r\n    if (user && user.identity) {\r\n      this._intervalId = setInterval(() => context.client.submitSessionHeartbeat(user.identity), this._interval);\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class ReferenceIdPlugin implements IEventPlugin {\r\n  public priority: number = 20;\r\n  public name: string = 'ReferenceIdPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    if ((!context.event.reference_id || context.event.reference_id.length === 0) && context.event.type === 'error') {\r\n      context.event.reference_id = Utils.guid().replace('-', '').substring(0, 10);\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                          \r\n\r\nexport class DefaultEventQueue implements IEventQueue {\r\n  /**\r\n   * The configuration object.\r\n   * @type {Configuration}\r\n   * @private\r\n   */\r\n  private _config: Configuration;\r\n\r\n  /**\r\n   * A list of handlers that will be fired when events are submitted.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _handlers: { (events: IEvent[], response: SubmissionResponse): void }[] = [];\r\n\r\n  /**\r\n   * Suspends processing until the specified time.\r\n   * @type {Date}\r\n   * @private\r\n   */\r\n  private _suspendProcessingUntil: Date;\r\n\r\n  /**\r\n   * Discards queued items until the specified time.\r\n   * @type {Date}\r\n   * @private\r\n   */\r\n  private _discardQueuedItemsUntil: Date;\r\n\r\n  /**\r\n   * Returns true if the queue is processing.\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  private _processingQueue: boolean = false;\r\n\r\n  /**\r\n   * Processes the queue every xx seconds.\r\n   * @type {Timer}\r\n   * @private\r\n   */\r\n  private _queueTimer: any;\r\n\r\n  constructor(config: Configuration) {\r\n    this._config = config;\r\n  }\r\n\r\n  public enqueue(event: IEvent): void {\r\n    const eventWillNotBeQueued: string = 'The event will not be queued.'; // optimization for minifier.\r\n    let config: Configuration = this._config; // Optimization for minifier.\r\n    let log: ILog = config.log; // Optimization for minifier.\r\n\r\n    if (!config.enabled) {\r\n      log.info(`Configuration is disabled. ${eventWillNotBeQueued}`);\r\n      return;\r\n    }\r\n\r\n    if (!config.isValid) {\r\n      log.info(`Invalid Api Key. ${eventWillNotBeQueued}`);\r\n      return;\r\n    }\r\n\r\n    if (this.areQueuedItemsDiscarded()) {\r\n      log.info(`Queue items are currently being discarded. ${eventWillNotBeQueued}`);\r\n      return;\r\n    }\r\n\r\n    this.ensureQueueTimer();\r\n\r\n    let timestamp = config.storage.queue.save(event);\r\n    let logText = `type=${event.type} ${!!event.reference_id ? 'refid=' + event.reference_id : ''}`;\r\n    if (timestamp) {\r\n      log.info(`Enqueuing event: ${timestamp} ${logText}`);\r\n    } else {\r\n      log.error(`Could not enqueue event ${logText}`);\r\n    }\r\n  }\r\n\r\n  public process(isAppExiting?: boolean): void {\r\n    const queueNotProcessed: string = 'The queue will not be processed.'; // optimization for minifier.\r\n    let config: Configuration = this._config; // Optimization for minifier.\r\n    let log: ILog = config.log; // Optimization for minifier.\r\n\r\n    if (this._processingQueue) {\r\n      return;\r\n    }\r\n\r\n    log.info('Processing queue...');\r\n    if (!config.enabled) {\r\n      log.info(`Configuration is disabled. ${queueNotProcessed}`);\r\n      return;\r\n    }\r\n\r\n    if (!config.isValid) {\r\n      log.info(`Invalid Api Key. ${queueNotProcessed}`);\r\n      return;\r\n    }\r\n\r\n    this._processingQueue = true;\r\n    this.ensureQueueTimer();\r\n\r\n    try {\r\n      let events = config.storage.queue.get(config.submissionBatchSize);\r\n      if (!events || events.length === 0) {\r\n        this._processingQueue = false;\r\n        return;\r\n      }\r\n\r\n      log.info(`Sending ${events.length} events to ${config.serverUrl}.`);\r\n      config.submissionClient.postEvents(events.map(e => e.value), config, (response: SubmissionResponse) => {\r\n        this.processSubmissionResponse(response, events);\r\n        this.eventsPosted(events.map(e => e.value), response);\r\n        log.info('Finished processing queue.');\r\n        this._processingQueue = false;\r\n      }, isAppExiting);\r\n    } catch (ex) {\r\n      log.error(`Error processing queue: ${ex}`);\r\n      this.suspendProcessing();\r\n      this._processingQueue = false;\r\n    }\r\n  }\r\n\r\n  public suspendProcessing(durationInMinutes?: number, discardFutureQueuedItems?: boolean, clearQueue?: boolean): void {\r\n    let config: Configuration = this._config; // Optimization for minifier.\r\n\r\n    if (!durationInMinutes || durationInMinutes <= 0) {\r\n      durationInMinutes = 5;\r\n    }\r\n\r\n    config.log.info(`Suspending processing for ${durationInMinutes} minutes.`);\r\n    this._suspendProcessingUntil = new Date(new Date().getTime() + (durationInMinutes * 60000));\r\n\r\n    if (discardFutureQueuedItems) {\r\n      this._discardQueuedItemsUntil = this._suspendProcessingUntil;\r\n    }\r\n\r\n    if (clearQueue) {\r\n      // Account is over the limit and we want to ensure that the sample size being sent in will contain newer errors.\r\n      config.storage.queue.clear();\r\n    }\r\n  }\r\n\r\n  public onEventsPosted(handler: (events: IEvent[], response: SubmissionResponse) => void): void {\r\n    !!handler && this._handlers.push(handler);\r\n  }\r\n\r\n  private eventsPosted(events: IEvent[], response: SubmissionResponse) {\r\n    let handlers = this._handlers; // optimization for minifier.\r\n    for (let index = 0; index < handlers.length; index++) {\r\n      try {\r\n        handlers[index](events, response);\r\n      } catch (ex) {\r\n        this._config.log.error(`Error calling onEventsPosted handler: ${ex}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private areQueuedItemsDiscarded(): boolean {\r\n    return this._discardQueuedItemsUntil && this._discardQueuedItemsUntil > new Date();\r\n  }\r\n\r\n  private ensureQueueTimer(): void {\r\n    if (!this._queueTimer) {\r\n      this._queueTimer = setInterval(() => this.onProcessQueue(), 10000);\r\n    }\r\n  }\r\n\r\n  private isQueueProcessingSuspended(): boolean {\r\n    return this._suspendProcessingUntil && this._suspendProcessingUntil > new Date();\r\n  }\r\n\r\n  private onProcessQueue(): void {\r\n    if (!this.isQueueProcessingSuspended() && !this._processingQueue) {\r\n      this.process();\r\n    }\r\n  }\r\n\r\n  private processSubmissionResponse(response: SubmissionResponse, events: IStorageItem[]): void {\r\n    const noSubmission: string = 'The event will not be submitted.'; // Optimization for minifier.\r\n    let config: Configuration = this._config; // Optimization for minifier.\r\n    let log: ILog = config.log; // Optimization for minifier.\r\n\r\n    if (response.success) {\r\n      log.info(`Sent ${events.length} events.`);\r\n      this.removeEvents(events);\r\n      return;\r\n    }\r\n\r\n    if (response.serviceUnavailable) {\r\n      // You are currently over your rate limit or the servers are under stress.\r\n      log.error('Server returned service unavailable.');\r\n      this.suspendProcessing();\r\n      return;\r\n    }\r\n\r\n    if (response.paymentRequired) {\r\n      // If the organization over the rate limit then discard the event.\r\n      log.info('Too many events have been submitted, please upgrade your plan.');\r\n      this.suspendProcessing(null, true, true);\r\n      return;\r\n    }\r\n\r\n    if (response.unableToAuthenticate) {\r\n      // The api key was suspended or could not be authorized.\r\n      log.info(`Unable to authenticate, please check your configuration. ${noSubmission}`);\r\n      this.suspendProcessing(15);\r\n      this.removeEvents(events);\r\n      return;\r\n    }\r\n\r\n    if (response.notFound || response.badRequest) {\r\n      // The service end point could not be found.\r\n      log.error(`Error while trying to submit data: ${response.message}`);\r\n      this.suspendProcessing(60 * 4);\r\n      this.removeEvents(events);\r\n      return;\r\n    }\r\n\r\n    if (response.requestEntityTooLarge) {\r\n      let message = 'Event submission discarded for being too large.';\r\n      if (config.submissionBatchSize > 1) {\r\n        log.error(`${message} Retrying with smaller batch size.`);\r\n        config.submissionBatchSize = Math.max(1, Math.round(config.submissionBatchSize / 1.5));\r\n      } else {\r\n        log.error(`${message} ${noSubmission}`);\r\n        this.removeEvents(events);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (!response.success) {\r\n      log.error(`Error submitting events: ${response.message || 'Please check the network tab for more info.'}`);\r\n      this.suspendProcessing();\r\n    }\r\n  }\r\n\r\n  private removeEvents(events: IStorageItem[]) {\r\n    for (let index = 0; index < (events || []).length; index++) {\r\n      this._config.storage.queue.remove(events[index].timestamp);\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                    \r\n\r\nexport class InMemoryStorageProvider implements IStorageProvider {\r\n  public queue: IStorage;\r\n  public settings: IStorage;\r\n\r\n  constructor(maxQueueItems: number = 250) {\r\n    this.queue = new InMemoryStorage(maxQueueItems);\r\n    this.settings = new InMemoryStorage(1);\r\n  }\r\n\r\n}\r\n\nr\n\r\ndeclare var XDomainRequest: { new (); create(); };\r\n\r\nexport class DefaultSubmissionClient implements ISubmissionClient {\r\n  public configurationVersionHeader: string = 'x-exceptionless-configversion';\r\n\r\n  public postEvents(events: IEvent[], config: Configuration, callback: (response: SubmissionResponse) => void, isAppExiting?: boolean): void {\r\n    let data = JSON.stringify(events);\r\n    let request = this.createRequest(config, 'POST',  `${config.serverUrl}/api/v2/events`, data);\r\n    let cb = this.createSubmissionCallback(config, callback);\r\n\r\n    return config.submissionAdapter.sendRequest(request, cb, isAppExiting);\r\n  }\r\n\r\n  public postUserDescription(referenceId: string, description: IUserDescription, config: Configuration, callback: (response: SubmissionResponse) => void): void {\r\n    let path = `${config.serverUrl}/api/v2/events/by-ref/${encodeURIComponent(referenceId)}/user-description`;\r\n    let data = JSON.stringify(description);\r\n    let request = this.createRequest(config, 'POST', path, data);\r\n    let cb = this.createSubmissionCallback(config, callback);\r\n\r\n    return config.submissionAdapter.sendRequest(request, cb);\r\n  }\r\n\r\n  public getSettings(config: Configuration, version: number, callback: (response: SettingsResponse) => void): void {\r\n    let request = this.createRequest(config, 'GET', `${config.serverUrl}/api/v2/projects/config?v=${version}`);\r\n    let cb = (status, message, data?, headers?) => {\r\n      if (status !== 200) {\r\n        return callback(new SettingsResponse(false, null, -1, null, message));\r\n      }\r\n\r\n      let settings: IClientConfiguration;\r\n      try {\r\n        settings = JSON.parse(data);\r\n      } catch (e) {\r\n        config.log.error(`Unable to parse settings: '${data}'`);\r\n      }\r\n\r\n      if (!settings || isNaN(settings.version)) {\r\n        return callback(new SettingsResponse(false, null, -1, null, 'Invalid configuration settings.'));\r\n      }\r\n\r\n      callback(new SettingsResponse(true, settings.settings || {}, settings.version));\r\n    };\r\n\r\n    return config.submissionAdapter.sendRequest(request, cb);\r\n  }\r\n\r\n  public sendHeartbeat(sessionIdOrUserId: string, closeSession: boolean, config: Configuration): void {\r\n    let request = this.createRequest(config, 'GET', `${config.heartbeatServerUrl}/api/v2/events/session/heartbeat?id=${sessionIdOrUserId}&close=${closeSession}`);\r\n    config.submissionAdapter.sendRequest(request);\r\n  }\r\n\r\n  private createRequest(config: Configuration, method: string, url: string, data: string = null): SubmissionRequest {\r\n    return {\r\n      method,\r\n      url,\r\n      data,\r\n      apiKey: config.apiKey,\r\n      userAgent: config.userAgent\r\n    };\r\n  }\r\n\r\n  private createSubmissionCallback(config: Configuration, callback: (response: SubmissionResponse) => void) {\r\n    return (status, message, data?, headers?) => {\r\n      let settingsVersion: number = headers && parseInt(headers[this.configurationVersionHeader], 10);\r\n      SettingsManager.checkVersion(settingsVersion, config);\r\n\r\n      callback(new SubmissionResponse(status, message));\r\n    };\r\n  }\r\n}\r\n\nexport class Utils {\r\n  public static addRange<T>(target: T[], ...values: T[]) {\r\n    if (!target) {\r\n      target = [];\r\n    }\r\n\r\n    if (!values || values.length === 0) {\r\n      return target;\r\n    }\r\n\r\n    for (let index = 0; index < values.length; index++) {\r\n      if (values[index] && target.indexOf(values[index]) < 0) {\r\n        target.push(values[index]);\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  public static getHashCode(source: string): number {\r\n    if (!source || source.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    let hash: number = 0;\r\n    for (let index = 0; index < source.length; index++) {\r\n      let character = source.charCodeAt(index);\r\n      hash = ((hash << 5) - hash) + character;\r\n      hash |= 0;\r\n    }\r\n\r\n    return hash;\r\n  }\r\n\r\n  public static getCookies(cookies: string, exclusions?: string[]): Object {\r\n    let result: Object = {};\r\n\r\n    let parts: string[] = (cookies || '').split('; ');\r\n    for (let index = 0; index < parts.length; index++) {\r\n      let cookie: string[] = parts[index].split('=');\r\n      if (!Utils.isMatch(cookie[0], exclusions)) {\r\n        result[cookie[0]] = cookie[1];\r\n      }\r\n    }\r\n\r\n    return !Utils.isEmpty(result) ? result : null;\r\n  }\r\n\r\n  public static guid(): string {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  public static merge(defaultValues: Object, values: Object) {\r\n    let result: Object = {};\r\n\r\n    for (let key in defaultValues || {}) {\r\n      if (!!defaultValues[key]) {\r\n        result[key] = defaultValues[key];\r\n      }\r\n    }\r\n\r\n    for (let key in values || {}) {\r\n      if (!!values[key]) {\r\n        result[key] = values[key];\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static parseVersion(source: string): string {\r\n    if (!source) {\r\n      return null;\r\n    }\r\n\r\n    let versionRegex = /(v?((\\d+)\\.(\\d+)(\\.(\\d+))?)(?:-([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?(?:\\+([\\dA-Za-z\\-]+(?:\\.[\\dA-Za-z\\-]+)*))?)/;\r\n    let matches = versionRegex.exec(source);\r\n    if (matches && matches.length > 0) {\r\n      return matches[0];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static parseQueryString(query: string, exclusions?: string[]) {\r\n    if (!query || query.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let pairs: string[] = query.split('&');\r\n    if (pairs.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let result: Object = {};\r\n    for (let index = 0; index < pairs.length; index++) {\r\n      let pair = pairs[index].split('=');\r\n      if (!Utils.isMatch(pair[0], exclusions)) {\r\n        result[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n      }\r\n    }\r\n\r\n    return !Utils.isEmpty(result) ? result : null;\r\n  }\r\n\r\n  public static randomNumber(): number {\r\n    return Math.floor(Math.random() * 9007199254740992);\r\n  }\r\n\r\n  /**\r\n   * Checks to see if a value matches a pattern.\r\n   * @param input the value to check against the @pattern.\r\n   * @param pattern The pattern to check, supports wild cards (*).\r\n   */\r\n  public static isMatch(input: string, patterns: string[], ignoreCase: boolean = true): boolean {\r\n    if (!input || typeof input !== 'string') {\r\n      return false;\r\n    }\r\n\r\n    let trim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\r\n    input = (ignoreCase ? input.toLowerCase() : input).replace(trim, '');\r\n\r\n    return (patterns || []).some(pattern => {\r\n      if (typeof pattern !== 'string') {\r\n        return false;\r\n      }\r\n\r\n      pattern = (ignoreCase ? pattern.toLowerCase() : pattern).replace(trim, '');\r\n      if (pattern.length <= 0) {\r\n        return false;\r\n      }\r\n\r\n      let startsWithWildcard: boolean = pattern[0] === '*';\r\n      if (startsWithWildcard) {\r\n        pattern = pattern.slice(1);\r\n      }\r\n\r\n      let endsWithWildcard: boolean = pattern[pattern.length - 1] === '*';\r\n      if (endsWithWildcard) {\r\n        pattern = pattern.substring(0, pattern.length - 1);\r\n      }\r\n\r\n      if (startsWithWildcard && endsWithWildcard) {\r\n        return pattern.length <= input.length && input.indexOf(pattern, 0) !== -1;\r\n      }\r\n\r\n      if (startsWithWildcard) {\r\n        return Utils.endsWith(input, pattern);\r\n      }\r\n\r\n      if (endsWithWildcard) {\r\n        return Utils.startsWith(input, pattern);\r\n      }\r\n\r\n      return input === pattern;\r\n    });\r\n  }\r\n\r\n  public static isEmpty(input: Object) {\r\n    return input === null || (typeof (input) === 'object' && Object.keys(input).length === 0);\r\n  }\r\n\r\n  public static startsWith(input: string, prefix: string): boolean {\r\n    return input.substring(0, prefix.length) === prefix;\r\n  }\r\n\r\n  public static endsWith(input: string, suffix: string): boolean {\r\n    return input.indexOf(suffix, input.length - suffix.length) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Stringifys an object with optional exclusions and max depth.\r\n   * @param data The data object to add.\r\n   * @param exclusions Any property names that should be excluded.\r\n   * @param maxDepth The max depth of the object to include.\r\n   */\r\n  public static stringify(data: any, exclusions?: string[], maxDepth?: number): string {\r\n    function stringifyImpl(obj: any, excludedKeys: string[]): string {\r\n      let cache: string[] = [];\r\n      return JSON.stringify(obj, function(key: string, value: any) {\r\n        if (Utils.isMatch(key, excludedKeys)) {\r\n          return;\r\n        }\r\n\r\n        if (typeof value === 'object' && !!value) {\r\n          if (cache.indexOf(value) !== -1) {\r\n            // Circular reference found, discard key\r\n            return;\r\n          }\r\n\r\n          cache.push(value);\r\n        }\r\n\r\n        return value;\r\n      });\r\n    }\r\n\r\n    if (({}).toString.call(data) === '[object Object]') {\r\n      let flattened = {};\r\n      /* tslint:disable:forin */\r\n      for (let prop in data) {\r\n        let value = data[prop];\r\n        if (value === data) {\r\n          continue;\r\n        }\r\n        flattened[prop] = data[prop];\r\n      }\r\n      /* tslint:enable:forin */\r\n\r\n      return stringifyImpl(flattened, exclusions);\r\n    }\r\n\r\n    if (({}).toString.call(data) === '[object Array]') {\r\n      let result = [];\r\n      for (let index = 0; index < data.length; index++) {\r\n        result[index] = JSON.parse(stringifyImpl(data[index], exclusions));\r\n      }\r\n\r\n      return JSON.stringify(result);\r\n    }\r\n\r\n    return stringifyImpl(data, exclusions);\r\n  }\r\n\r\n  public static toBoolean(input, defaultValue: boolean = false): boolean {\r\n    if (typeof input === 'boolean') {\r\n      return input;\r\n    }\r\n\r\n    if (input === null || typeof input !== 'number' && typeof input !== 'string') {\r\n      return defaultValue;\r\n    }\r\n\r\n    switch ((input + '').toLowerCase().trim()) {\r\n      case 'true': case 'yes': case '1': return true;\r\n      case 'false': case 'no': case '0': case null: return false;\r\n    }\r\n\r\n    return defaultValue;\r\n  }\r\n}\r\n\nr\n\r\nexport class Configuration implements IConfigurationSettings {\r\n  /**\r\n   * The default configuration settings that are applied to new configuration instances.\r\n   * @type {IConfigurationSettings}\r\n   * @private\r\n   */\r\n  private static _defaultSettings: IConfigurationSettings = null;\r\n\r\n  /**\r\n   * A default list of tags that will automatically be added to every\r\n   * report submitted to the server.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  public defaultTags: string[] = [];\r\n\r\n  /**\r\n   * A default list of of extended data objects that will automatically\r\n   * be added to every report submitted to the server.\r\n   *\r\n   * @type {{}}\r\n   */\r\n  public defaultData: Object = {};\r\n\r\n  /**\r\n   * Whether the client is currently enabled or not. If it is disabled,\r\n   * submitted errors will be discarded and no data will be sent to the server.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  public enabled: boolean = true;\r\n\r\n  public environmentInfoCollector: IEnvironmentInfoCollector;\r\n  public errorParser: IErrorParser;\r\n  public lastReferenceIdManager: ILastReferenceIdManager = new DefaultLastReferenceIdManager();\r\n  public log: ILog;\r\n  public moduleCollector: IModuleCollector;\r\n  public requestInfoCollector: IRequestInfoCollector;\r\n\r\n  /**\r\n   * Maximum number of events that should be sent to the server together in a batch. (Defaults to 50)\r\n   */\r\n  public submissionBatchSize: number;\r\n  public submissionAdapter: ISubmissionAdapter;\r\n  public submissionClient: ISubmissionClient;\r\n\r\n  /**\r\n   * Contains a dictionary of custom settings that can be used to control\r\n   * the client and will be automatically updated from the server.\r\n   */\r\n  public settings: Object = {};\r\n\r\n  public storage: IStorageProvider;\r\n\r\n  public queue: IEventQueue;\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _apiKey: string;\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _serverUrl: string = 'https://collector.exceptionless.io';\r\n\r\n  /**\r\n   * The heartbeat server url that all heartbeats will be sent to.\r\n   * @type {string}\r\n   * @private\r\n   */\r\n  private _heartbeatServerUrl: string = 'https://heartbeat.exceptionless.io';\r\n\r\n  /**\r\n   * How often the client should check for updated server settings when idle. The default is every 2 minutes.\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  private _updateSettingsWhenIdleInterval: number = 120000;\r\n\r\n  /**\r\n   * A list of exclusion patterns.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _dataExclusions: string[] = [];\r\n\r\n  /**\r\n   * A list of user agent patterns.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _userAgentBotPatterns: string[] = [];\r\n\r\n  /**\r\n   * The list of plugins that will be used in this configuration.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _plugins: IEventPlugin[] = [];\r\n\r\n  /**\r\n   * A list of handlers that will be fired when configuration changes.\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  private _handlers: { (config: Configuration): void }[] = [];\r\n\r\n  constructor(configSettings?: IConfigurationSettings) {\r\n    function inject(fn: any) {\r\n      return typeof fn === 'function' ? fn(this) : fn;\r\n    }\r\n\r\n    configSettings = Utils.merge(Configuration.defaults, configSettings);\r\n\r\n    this.log = inject(configSettings.log) || new NullLog();\r\n    this.apiKey = configSettings.apiKey;\r\n    this.serverUrl = configSettings.serverUrl;\r\n    this.heartbeatServerUrl = configSettings.heartbeatServerUrl;\r\n    this.updateSettingsWhenIdleInterval = configSettings.updateSettingsWhenIdleInterval;\r\n\r\n    this.environmentInfoCollector = inject(configSettings.environmentInfoCollector);\r\n    this.errorParser = inject(configSettings.errorParser);\r\n    this.lastReferenceIdManager = inject(configSettings.lastReferenceIdManager) || new DefaultLastReferenceIdManager();\r\n    this.moduleCollector = inject(configSettings.moduleCollector);\r\n    this.requestInfoCollector = inject(configSettings.requestInfoCollector);\r\n    this.submissionBatchSize = inject(configSettings.submissionBatchSize) || 50;\r\n    this.submissionAdapter = inject(configSettings.submissionAdapter);\r\n    this.submissionClient = inject(configSettings.submissionClient) || new DefaultSubmissionClient();\r\n    this.storage = inject(configSettings.storage) || new InMemoryStorageProvider();\r\n    this.queue = inject(configSettings.queue) || new DefaultEventQueue(this);\r\n\r\n    SettingsManager.applySavedServerSettings(this);\r\n    EventPluginManager.addDefaultPlugins(this);\r\n  }\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @returns {string}\r\n   */\r\n  public get apiKey(): string {\r\n    return this._apiKey;\r\n  }\r\n\r\n  /**\r\n   * The API key that will be used when sending events to the server.\r\n   * @param value\r\n   */\r\n  public set apiKey(value: string) {\r\n    this._apiKey = value || null;\r\n    this.log.info(`apiKey: ${this._apiKey}`);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Returns true if the apiKey is valid.\r\n   * @returns {boolean}\r\n   */\r\n  public get isValid(): boolean {\r\n    return !!this.apiKey && this.apiKey.length >= 10;\r\n  }\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @returns {string}\r\n   */\r\n  public get serverUrl(): string {\r\n    return this._serverUrl;\r\n  }\r\n\r\n  /**\r\n   * The server url that all events will be sent to.\r\n   * @param value\r\n   */\r\n  public set serverUrl(value: string) {\r\n    if (!!value) {\r\n      this._serverUrl = value;\r\n      this._heartbeatServerUrl = value;\r\n      this.log.info(`serverUrl: ${value}`);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The heartbeat server url that all heartbeats will be sent to.\r\n   * @returns {string}\r\n   */\r\n  public get heartbeatServerUrl(): string {\r\n    return this._heartbeatServerUrl;\r\n  }\r\n\r\n  /**\r\n   * The heartbeat server url that all heartbeats will be sent to.\r\n   * @param value\r\n   */\r\n  public set heartbeatServerUrl(value: string) {\r\n    if (!!value) {\r\n      this._heartbeatServerUrl = value;\r\n      this.log.info(`heartbeatServerUrl: ${value}`);\r\n      this.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * How often the client should check for updated server settings when idle. The default is every 2 minutes.\r\n   * @returns {number}\r\n   */\r\n  public get updateSettingsWhenIdleInterval(): number {\r\n    return this._updateSettingsWhenIdleInterval;\r\n  }\r\n\r\n  /**\r\n   * How often the client should check for updated server settings when idle. The default is every 2 minutes.\r\n   * @param value\r\n   */\r\n  public set updateSettingsWhenIdleInterval(value: number) {\r\n    if (typeof value !== 'number') {\r\n      return;\r\n    }\r\n\r\n    if (value <= 0) {\r\n      value = -1;\r\n    } else if (value > 0 && value < 15000) {\r\n      value = 15000;\r\n    }\r\n\r\n    this._updateSettingsWhenIdleInterval = value;\r\n    this.log.info(`updateSettingsWhenIdleInterval: ${value}`);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   *  A list of exclusion patterns that will automatically remove any data that\r\n   *  matches them from any data submitted to the server.\r\n   *\r\n   *  For example, entering CreditCard will remove any extended data properties,\r\n   *  form fields, cookies and query parameters from the report.\r\n   *\r\n   * @returns {string[]}\r\n   */\r\n  public get dataExclusions(): string[] {\r\n    let exclusions: string = this.settings['@@DataExclusions'];\r\n    return this._dataExclusions.concat(exclusions && exclusions.split(',') || []);\r\n  }\r\n\r\n  /**\r\n   * Add items to the list of exclusion patterns that will automatically remove any\r\n   * data that matches them from any data submitted to the server.\r\n   *\r\n   * For example, entering CreditCard will remove any extended data properties, form\r\n   * fields, cookies and query parameters from the report.\r\n   *\r\n   * @param exclusions\r\n   */\r\n  public addDataExclusions(...exclusions: string[]) {\r\n    this._dataExclusions = Utils.addRange<string>(this._dataExclusions, ...exclusions);\r\n  }\r\n\r\n  /**\r\n   * A list of user agent patterns that will cause any event with a matching user agent to not be submitted.\r\n   *\r\n   * For example, entering *Bot* will cause any events that contains a user agent of Bot will not be submitted.\r\n   *\r\n   * @returns {string[]}\r\n   */\r\n  public get userAgentBotPatterns(): string[] {\r\n    let patterns: string = this.settings['@@UserAgentBotPatterns'];\r\n    return this._userAgentBotPatterns.concat(patterns && patterns.split(',') || []);\r\n  }\r\n\r\n  /**\r\n   * Add items to the list of user agent patterns that will cause any event with a matching user agent to not be submitted.\r\n   *\r\n   * For example, entering *Bot* will cause any events that contains a user agent of Bot will not be submitted.\r\n   *\r\n   * @param userAgentBotPatterns\r\n   */\r\n  public addUserAgentBotPatterns(...userAgentBotPatterns: string[]) {\r\n    this._userAgentBotPatterns = Utils.addRange<string>(this._userAgentBotPatterns, ...userAgentBotPatterns);\r\n  }\r\n\r\n  /**\r\n   * The list of plugins that will be used in this configuration.\r\n   * @returns {IEventPlugin[]}\r\n   */\r\n  public get plugins(): IEventPlugin[] {\r\n    return this._plugins.sort((p1: IEventPlugin, p2: IEventPlugin) => {\r\n      return (p1.priority < p2.priority) ? -1 : (p1.priority > p2.priority) ? 1 : 0;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register an plugin to be used in this configuration.\r\n   * @param plugin\r\n   */\r\n  public addPlugin(plugin: IEventPlugin): void;\r\n\r\n  /**\r\n   * Register an plugin to be used in this configuration.\r\n   * @param name The name used to identify the plugin.\r\n   * @param priority Used to determine plugins priority.\r\n   * @param pluginAction A function that is run.\r\n   */\r\n  public addPlugin(name: string, priority: number, pluginAction: (context: EventPluginContext, next?: () => void) => void): void;\r\n  public addPlugin(pluginOrName: IEventPlugin | string, priority?: number, pluginAction?: (context: EventPluginContext, next?: () => void) => void): void {\r\n    let plugin: IEventPlugin = !!pluginAction ? { name: <string>pluginOrName, priority: priority, run: pluginAction } : <IEventPlugin>pluginOrName;\r\n    if (!plugin || !plugin.run) {\r\n      this.log.error('Add plugin failed: Run method not defined');\r\n      return;\r\n    }\r\n\r\n    if (!plugin.name) {\r\n      plugin.name = Utils.guid();\r\n    }\r\n\r\n    if (!plugin.priority) {\r\n      plugin.priority = 0;\r\n    }\r\n\r\n    let pluginExists: boolean = false;\r\n    let plugins = this._plugins; // optimization for minifier.\r\n    for (let index = 0; index < plugins.length; index++) {\r\n      if (plugins[index].name === plugin.name) {\r\n        pluginExists = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!pluginExists) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the plugin from this configuration.\r\n   * @param plugin\r\n   */\r\n  public removePlugin(plugin: IEventPlugin): void;\r\n\r\n  /**\r\n   * Remove an plugin by key from this configuration.\r\n   * @param name\r\n   */\r\n  public removePlugin(name: string): void;\r\n  public removePlugin(pluginOrName: IEventPlugin | string): void {\r\n    let name: string = typeof pluginOrName === 'string' ? pluginOrName : pluginOrName.name;\r\n    if (!name) {\r\n      this.log.error('Remove plugin failed: Plugin name not defined');\r\n      return;\r\n    }\r\n\r\n    let plugins = this._plugins; // optimization for minifier.\r\n    for (let index = 0; index < plugins.length; index++) {\r\n      if (plugins[index].name === name) {\r\n        plugins.splice(index, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Automatically set the application version for events.\r\n   * @param version\r\n   */\r\n  public setVersion(version: string): void {\r\n    if (!!version) {\r\n      this.defaultData['@version'] = version;\r\n    }\r\n  }\r\n\r\n  public setUserIdentity(userInfo: IUserInfo): void;\r\n  public setUserIdentity(identity: string): void;\r\n  public setUserIdentity(identity: string, name: string): void;\r\n  public setUserIdentity(userInfoOrIdentity: IUserInfo | string, name?: string): void {\r\n    const USER_KEY: string = '@user'; // optimization for minifier.\r\n    let userInfo: IUserInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\r\n\r\n    let shouldRemove: boolean = !userInfo || (!userInfo.identity && !userInfo.name);\r\n    if (shouldRemove) {\r\n      delete this.defaultData[USER_KEY];\r\n    } else {\r\n      this.defaultData[USER_KEY] = userInfo;\r\n    }\r\n\r\n    this.log.info(`user identity: ${shouldRemove ? 'null' : userInfo.identity}`);\r\n  }\r\n\r\n  /**\r\n   * Used to identify the client that sent the events to the server.\r\n   * @returns {string}\r\n   */\r\n  public get userAgent(): string {\r\n    return 'exceptionless-js/1.0.0.0';\r\n  }\r\n\r\n  /**\r\n   * Automatically send a heartbeat to keep the session alive.\r\n   */\r\n  public useSessions(sendHeartbeats: boolean = true, heartbeatInterval: number = 30000): void {\r\n    if (sendHeartbeats) {\r\n      this.addPlugin(new HeartbeatPlugin(heartbeatInterval));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Automatically set a reference id for error events.\r\n   */\r\n  public useReferenceIds(): void {\r\n    this.addPlugin(new ReferenceIdPlugin());\r\n  }\r\n\r\n  public useLocalStorage(): void {\r\n    // This method will be injected via the prototype.\r\n  }\r\n\r\n  // TODO: Support a min log level.\r\n  public useDebugLogger(): void {\r\n    this.log = new ConsoleLog();\r\n  }\r\n\r\n  public onChanged(handler: (config: Configuration) => void) {\r\n    !!handler && this._handlers.push(handler);\r\n  }\r\n\r\n  private changed() {\r\n    let handlers = this._handlers; // optimization for minifier.\r\n    for (let index = 0; index < handlers.length; index++) {\r\n      try {\r\n        handlers[index](this);\r\n      } catch (ex) {\r\n        this.log.error(`Error calling onChanged handler: ${ex}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default configuration settings that are applied to new configuration instances.\r\n   * @returns {IConfigurationSettings}\r\n   */\r\n  public static get defaults() {\r\n    if (Configuration._defaultSettings === null) {\r\n      Configuration._defaultSettings = {};\r\n    }\r\n\r\n    return Configuration._defaultSettings;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                                                                                         \r\n\r\nexport class EventBuilder {\r\n  public target: IEvent;\r\n  public client: ExceptionlessClient;\r\n  public pluginContextData: ContextData;\r\n\r\n  private _validIdentifierErrorMessage: string = 'must contain between 8 and 100 alphanumeric or \\'-\\' characters.'; // optimization for minifier.\r\n\r\n  constructor(event: IEvent, client: ExceptionlessClient, pluginContextData?: ContextData) {\r\n    this.target = event;\r\n    this.client = client;\r\n    this.pluginContextData = pluginContextData || new ContextData();\r\n  }\r\n\r\n  public setType(type: string): EventBuilder {\r\n    if (!!type) {\r\n      this.target.type = type;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setSource(source: string): EventBuilder {\r\n    if (!!source) {\r\n      this.target.source = source;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setReferenceId(referenceId: string): EventBuilder {\r\n    if (!this.isValidIdentifier(referenceId)) {\r\n      throw new Error(`ReferenceId ${this._validIdentifierErrorMessage}`);\r\n    }\r\n\r\n    this.target.reference_id = referenceId;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Allows you to reference a parent event by its ReferenceId property. This allows you to have parent and child relationships.\r\n   * @param name Reference name\r\n   * @param id The reference id that points to a specific event\r\n   * @returns {EventBuilder}\r\n     */\r\n  public setEventReference(name: string, id: string): EventBuilder {\r\n    if (!name) {\r\n      throw new Error('Invalid name');\r\n    }\r\n\r\n    if (!id || !this.isValidIdentifier(id)) {\r\n      throw new Error(`Id ${this._validIdentifierErrorMessage}`);\r\n    }\r\n\r\n    this.setProperty('@ref:' + name, id);\r\n    return this;\r\n  }\r\n\r\n  public setMessage(message: string): EventBuilder {\r\n    if (!!message) {\r\n      this.target.message = message;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setGeo(latitude: number, longitude: number): EventBuilder {\r\n    if (latitude < -90.0 || latitude > 90.0) {\r\n      throw new Error('Must be a valid latitude value between -90.0 and 90.0.');\r\n    }\r\n\r\n    if (longitude < -180.0 || longitude > 180.0) {\r\n      throw new Error('Must be a valid longitude value between -180.0 and 180.0.');\r\n    }\r\n\r\n    this.target.geo = `${latitude},${longitude}`;\r\n    return this;\r\n  }\r\n\r\n  public setUserIdentity(userInfo: IUserInfo): EventBuilder;\r\n  public setUserIdentity(identity: string): EventBuilder;\r\n  public setUserIdentity(identity: string, name: string): EventBuilder;\r\n  public setUserIdentity(userInfoOrIdentity: IUserInfo | string, name?: string): EventBuilder {\r\n    let userInfo = typeof userInfoOrIdentity !== 'string' ? userInfoOrIdentity : { identity: userInfoOrIdentity, name: name };\r\n    if (!userInfo || (!userInfo.identity && !userInfo.name)) {\r\n      return this;\r\n    }\r\n\r\n    this.setProperty('@user', userInfo);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the user's description of the event.\r\n   *\r\n   * @param emailAddress The email address\r\n   * @param description The user's description of the event.\r\n   * @returns {EventBuilder}\r\n     */\r\n  public setUserDescription(emailAddress: string, description: string): EventBuilder {\r\n    if (emailAddress && description) {\r\n      this.setProperty('@user_description', { email_address: emailAddress, description: description });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes default stacking behavior by setting manual\r\n   * stacking information.\r\n   * @param signatureData A dictionary of strings to use for stacking.\r\n   * @param title An optional title for the stacking information.\r\n   * @returns {EventBuilder}\r\n     */\r\n  public setManualStackingInfo(signatureData: any, title?: string) {\r\n    if (signatureData) {\r\n      let stack = <IManualStackingInfo>{\r\n        signature_data: signatureData\r\n      };\r\n      if (title) {\r\n        stack.title = title;\r\n      }\r\n      this.setProperty('@stack', stack);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes default stacking behavior by setting the stacking key.\r\n   * @param manualStackingKey The manual stacking key.\r\n   * @param title An optional title for the stacking information.\r\n   * @returns {EventBuilder}\r\n     */\r\n  public setManualStackingKey(manualStackingKey: string, title?: string): EventBuilder {\r\n    if (manualStackingKey) {\r\n      let data = {\r\n        'ManualStackingKey': manualStackingKey\r\n      };\r\n      this.setManualStackingInfo(data, title);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public setValue(value: number): EventBuilder {\r\n    if (!!value) {\r\n      this.target.value = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public addTags(...tags: string[]): EventBuilder {\r\n    this.target.tags = Utils.addRange<string>(this.target.tags, ...tags);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds the object to extended data. Uses @excludedPropertyNames\r\n   * to exclude data from being included in the event.\r\n   * @param name The data object to add.\r\n   * @param value The name of the object to add.\r\n   * @param maxDepth The max depth of the object to include.\r\n   * @param excludedPropertyNames Any property names that should be excluded.\r\n   */\r\n  public setProperty(name: string, value: any, maxDepth?: number, excludedPropertyNames?: string[]): EventBuilder {\r\n    if (!name || (value === undefined || value == null)) {\r\n      return this;\r\n    }\r\n\r\n    if (!this.target.data) {\r\n      this.target.data = {};\r\n    }\r\n\r\n    let result = JSON.parse(Utils.stringify(value, this.client.config.dataExclusions.concat(excludedPropertyNames || []), maxDepth));\r\n    if (!Utils.isEmpty(result)) {\r\n      this.target.data[name] = result;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public markAsCritical(critical: boolean): EventBuilder {\r\n    if (critical) {\r\n      this.addTags('Critical');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public addRequestInfo(request: Object): EventBuilder {\r\n    if (!!request) {\r\n      this.pluginContextData['@request'] = request;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public submit(callback?: (context: EventPluginContext) => void): void {\r\n    this.client.submitEvent(this.target, this.pluginContextData, callback);\r\n  }\r\n\r\n  private isValidIdentifier(value: string): boolean {\r\n    if (!value) {\r\n      return true;\r\n    }\r\n\r\n    if (value.length < 8 || value.length > 100) {\r\n      return false;\r\n    }\r\n\r\n    for (let index = 0; index < value.length; index++) {\r\n      let code = value.charCodeAt(index);\r\n      let isDigit = (code >= 48) && (code <= 57);\r\n      let isLetter = ((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122));\r\n      let isMinus = code === 45;\r\n\r\n      if (!(isDigit || isLetter) && !isMinus) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\nexport interface IUserDescription {\r\n  email_address?: string;\r\n  description?: string;\r\n  data?: any;\r\n}\r\n\nexport class ContextData {\r\n  public setException(exception: Error): void {\r\n    if (exception) {\r\n      this['@@_Exception'] = exception;\r\n    }\r\n  }\r\n\r\n  public get hasException(): boolean {\r\n    return !!this['@@_Exception'];\r\n  }\r\n\r\n  public getException(): Error {\r\n    return this['@@_Exception'] || null;\r\n  }\r\n\r\n  public markAsUnhandledError(): void {\r\n    this['@@_IsUnhandledError'] = true;\r\n  }\r\n\r\n  public get isUnhandledError(): boolean {\r\n    return !!this['@@_IsUnhandledError'];\r\n  }\r\n\r\n  public setSubmissionMethod(method: string): void {\r\n    if (method) {\r\n      this['@@_SubmissionMethod'] = method;\r\n    }\r\n  }\r\n\r\n  public getSubmissionMethod(): string {\r\n    return this['@@_SubmissionMethod'] || null;\r\n  }\r\n}\r\n\nr\n\r\nexport class ExceptionlessClient {\r\n  /**\r\n   * The default ExceptionlessClient instance.\r\n   * @type {ExceptionlessClient}\r\n   * @private\r\n   */\r\n  private static _instance: ExceptionlessClient = null;\r\n\r\n  public config: Configuration;\r\n\r\n  private _intervalId: any;\r\n  private _timeoutId: any;\r\n\r\n  constructor();\r\n  constructor(settings: IConfigurationSettings);\r\n  constructor(apiKey: string, serverUrl?: string);\r\n  constructor(settingsOrApiKey?: IConfigurationSettings | string, serverUrl?: string) {\r\n    if (typeof settingsOrApiKey === 'object') {\r\n      this.config = new Configuration(settingsOrApiKey);\r\n    } else {\r\n      this.config = new Configuration({ apiKey: <string>settingsOrApiKey, serverUrl: serverUrl });\r\n    }\r\n\r\n    this.updateSettingsTimer(5000);\r\n    this.config.onChanged((config) => this.updateSettingsTimer(this._timeoutId > 0 ? 5000 : 0));\r\n    this.config.queue.onEventsPosted((events, response) =>  this.updateSettingsTimer());\r\n  }\r\n\r\n  public createException(exception: Error): EventBuilder {\r\n    let pluginContextData = new ContextData();\r\n    pluginContextData.setException(exception);\r\n    return this.createEvent(pluginContextData).setType('error');\r\n  }\r\n\r\n  public submitException(exception: Error, callback?: (context: EventPluginContext) => void): void {\r\n    this.createException(exception).submit(callback);\r\n  }\r\n\r\n  public createUnhandledException(exception: Error, submissionMethod?: string): EventBuilder {\r\n    let builder = this.createException(exception);\r\n    builder.pluginContextData.markAsUnhandledError();\r\n    builder.pluginContextData.setSubmissionMethod(submissionMethod);\r\n\r\n    return builder;\r\n  }\r\n\r\n  public submitUnhandledException(exception: Error, submissionMethod?: string, callback?: (context: EventPluginContext) => void) {\r\n    this.createUnhandledException(exception, submissionMethod).submit(callback);\r\n  }\r\n\r\n  public createFeatureUsage(feature: string): EventBuilder {\r\n    return this.createEvent().setType('usage').setSource(feature);\r\n  }\r\n\r\n  public submitFeatureUsage(feature: string, callback?: (context: EventPluginContext) => void): void {\r\n    this.createFeatureUsage(feature).submit(callback);\r\n  }\r\n\r\n  public createLog(message: string): EventBuilder;\r\n  public createLog(source: string, message: string): EventBuilder;\r\n  public createLog(source: string, message: string, level: string): EventBuilder;\r\n  public createLog(sourceOrMessage: string, message?: string, level?: string): EventBuilder {\r\n    let builder = this.createEvent().setType('log');\r\n\r\n    if (message && level) {\r\n      builder = builder.setSource(sourceOrMessage).setMessage(message).setProperty('@level', level);\r\n    } else if (message) {\r\n      builder = builder.setSource(sourceOrMessage).setMessage(message);\r\n    } else {\r\n      // TODO: Look into using https: //www.stevefenton.co.uk/Content/Blog/Date/201304/Blog/Obtaining-A-Class-Name-At-Runtime-In-TypeScript/\r\n      let caller: any = arguments.callee.caller;\r\n      builder = builder.setSource(caller && caller.name).setMessage(sourceOrMessage);\r\n    }\r\n\r\n    return builder;\r\n  }\r\n\r\n  public submitLog(message: string): void;\r\n  public submitLog(source: string, message: string): void;\r\n  public submitLog(source: string, message: string, level: string, callback?: (context: EventPluginContext) => void): void;\r\n  public submitLog(sourceOrMessage: string, message?: string, level?: string, callback?: (context: EventPluginContext) => void): void {\r\n    this.createLog(sourceOrMessage, message, level).submit(callback);\r\n  }\r\n\r\n  public createNotFound(resource: string): EventBuilder {\r\n    return this.createEvent().setType('404').setSource(resource);\r\n  }\r\n\r\n  public submitNotFound(resource: string, callback?: (context: EventPluginContext) => void): void {\r\n    this.createNotFound(resource).submit(callback);\r\n  }\r\n\r\n  public createSessionStart(): EventBuilder {\r\n    return this.createEvent().setType('session');\r\n  }\r\n\r\n  public submitSessionStart(callback?: (context: EventPluginContext) => void): void {\r\n    this.createSessionStart().submit(callback);\r\n  }\r\n\r\n  public submitSessionEnd(sessionIdOrUserId: string): void {\r\n    if (sessionIdOrUserId) {\r\n      this.config.log.info(`Submitting session end: ${sessionIdOrUserId}`);\r\n      this.config.submissionClient.sendHeartbeat(sessionIdOrUserId, true, this.config);\r\n    }\r\n  }\r\n\r\n  public submitSessionHeartbeat(sessionIdOrUserId: string): void {\r\n    if (sessionIdOrUserId) {\r\n      this.config.log.info(`Submitting session heartbeat: ${sessionIdOrUserId}`);\r\n      this.config.submissionClient.sendHeartbeat(sessionIdOrUserId, false, this.config);\r\n    }\r\n  }\r\n\r\n  public createEvent(pluginContextData?: ContextData): EventBuilder {\r\n    return new EventBuilder({ date: new Date() }, this, pluginContextData);\r\n  }\r\n\r\n  /**\r\n   * Submits the event to be sent to the server.\r\n   * @param event The event data.\r\n   * @param pluginContextData Any contextual data objects to be used by Exceptionless plugins to gather default information for inclusion in the report information.\r\n   * @param callback\r\n   */\r\n  public submitEvent(event: IEvent, pluginContextData?: ContextData, callback?: (context: EventPluginContext) => void): void {\r\n    function cancelled(context: EventPluginContext) {\r\n      if (!!context) {\r\n        context.cancelled = true;\r\n      }\r\n\r\n      return !!callback && callback(context);\r\n    }\r\n\r\n    let context = new EventPluginContext(this, event, pluginContextData);\r\n    if (!event) {\r\n      return cancelled(context);\r\n    }\r\n\r\n    if (!this.config.enabled) {\r\n      this.config.log.info('Event submission is currently disabled.');\r\n      return cancelled(context);\r\n    }\r\n\r\n    if (!event.data) {\r\n      event.data = {};\r\n    }\r\n\r\n    if (!event.tags || !event.tags.length) {\r\n      event.tags = [];\r\n    }\r\n\r\n    EventPluginManager.run(context, function (ctx: EventPluginContext) {\r\n      let config = ctx.client.config;\r\n      let ev = ctx.event;\r\n\r\n      if (!ctx.cancelled) {\r\n        // ensure all required data\r\n        if (!ev.type || ev.type.length === 0) {\r\n          ev.type = 'log';\r\n        }\r\n\r\n        if (!ev.date) {\r\n          ev.date = new Date();\r\n        }\r\n\r\n        config.queue.enqueue(ev);\r\n\r\n        if (ev.reference_id && ev.reference_id.length > 0) {\r\n          ctx.log.info(`Setting last reference id '${ev.reference_id}'`);\r\n          config.lastReferenceIdManager.setLast(ev.reference_id);\r\n        }\r\n      }\r\n\r\n      !!callback && callback(ctx);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the user's email address and description of an event for the specified reference id.\r\n   * @param referenceId The reference id of the event to update.\r\n   * @param email The user's email address to set on the event.\r\n   * @param description The user's description of the event.\r\n   * @param callback The submission response.\r\n   */\r\n  public updateUserEmailAndDescription(referenceId: string, email: string, description: string, callback?: (response: SubmissionResponse) => void) {\r\n    if (!referenceId || !email || !description || !this.config.enabled) {\r\n      return !!callback && callback(new SubmissionResponse(500, 'cancelled'));\r\n    }\r\n\r\n    let userDescription: IUserDescription = { email_address: email, description: description };\r\n    this.config.submissionClient.postUserDescription(referenceId, userDescription, this.config, (response: SubmissionResponse) => {\r\n      if (!response.success) {\r\n        this.config.log.error(`Failed to submit user email and description for event '${referenceId}': ${response.statusCode} ${response.message}`);\r\n      }\r\n\r\n      !!callback && callback(response);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the last event client id that was submitted to the server.\r\n   * @returns {string} The event client id.\r\n   */\r\n  public getLastReferenceId(): string {\r\n    return this.config.lastReferenceIdManager.getLast();\r\n  }\r\n\r\n  private updateSettingsTimer(initialDelay?: number) {\r\n    this.config.log.info(`Updating settings timer with delay: ${initialDelay}`);\r\n\r\n    this._timeoutId = clearTimeout(this._timeoutId);\r\n    this._timeoutId = clearInterval(this._intervalId);\r\n\r\n    let interval = this.config.updateSettingsWhenIdleInterval;\r\n    if (interval > 0) {\r\n      let updateSettings = () => SettingsManager.updateSettings(this.config);\r\n      if (initialDelay > 0) {\r\n        this._timeoutId = setTimeout(updateSettings, initialDelay);\r\n      }\r\n\r\n      this._intervalId = setInterval(updateSettings, interval);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default ExceptionlessClient instance.\r\n   * @type {ExceptionlessClient}\r\n   */\r\n  public static get default() {\r\n    if (ExceptionlessClient._instance === null) {\r\n      ExceptionlessClient._instance = new ExceptionlessClient(null);\r\n    }\r\n\r\n    return ExceptionlessClient._instance;\r\n  }\r\n}\r\n\nexport interface IManualStackingInfo {\r\n  title?: string;\r\n  signature_data?: any;\r\n}\r\n\nexport interface IModule {\r\n  data?: any;\r\n\r\n  module_id?: number;\r\n  name?: string;\r\n  version?: string;\r\n  is_entry?: boolean;\r\n  created_date?: Date;\r\n  modified_date?: Date;\r\n}\r\n\nexport interface IRequestInfo {\r\n  user_agent?: string;\r\n  http_method?: string;\r\n  is_secure?: boolean;\r\n  host?: string;\r\n  port?: number;\r\n  path?: string;\r\n  referrer?: string;\r\n  client_ip_address?: string;\r\n  cookies?: any;\r\n  post_data?: any;\r\n  query_string?: any;\r\n  data?: any;\r\n}\r\n\nexport interface IEnvironmentInfo {\r\n  processor_count?: number;\r\n  total_physical_memory?: number;\r\n  available_physical_memory?: number;\r\n  command_line?: string;\r\n  process_name?: string;\r\n  process_id?: string;\r\n  process_memory_size?: number;\r\n  thread_id?: string;\r\n  architecture?: string;\r\n  o_s_name?: string;\r\n  o_s_version?: string;\r\n  ip_address?: string;\r\n  machine_name?: string;\r\n  install_id?: string;\r\n  runtime_version?: string;\r\n  data?: any;\r\n}\r\n\nexport interface IParameter {\r\n  data?: any;\r\n  generic_arguments?: string[];\r\n\r\n  name?: string;\r\n  type?: string;\r\n  type_namespace?: string;\r\n}\r\n\n                                          \r\n\r\nexport interface IMethod {\r\n  data?: any;\r\n  generic_arguments?: string[];\r\n  parameters?: IParameter[];\r\n\r\n  is_signature_target?: boolean;\r\n  declaring_namespace?: string;\r\n  declaring_type?: string;\r\n  name?: string;\r\n  module_id?: number;\r\n}\r\n\n                                    \r\n\r\nexport interface IStackFrame extends IMethod {\r\n  file_name?: string;\r\n  line_number?: number;\r\n  column?: number;\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IInnerError {\r\n  message?: string;\r\n  type?: string;\r\n  code?: string;\r\n  data?: any;\r\n  inner?: IInnerError;\r\n  stack_trace?: IStackFrame[];\r\n  target_method?: IMethod;\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class ConfigurationDefaultsPlugin implements IEventPlugin {\r\n  public priority: number = 10;\r\n  public name: string = 'ConfigurationDefaultsPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    let config = context.client.config;\r\n    let defaultTags: string[] = config.defaultTags || [];\r\n    for (let index = 0; index < defaultTags.length; index++) {\r\n      let tag = defaultTags[index];\r\n      if (!!tag && context.event.tags.indexOf(tag) < 0) {\r\n        context.event.tags.push(tag);\r\n      }\r\n    }\r\n\r\n    let defaultData: Object = config.defaultData || {};\r\n    for (let key in defaultData) {\r\n      if (!!defaultData[key]) {\r\n        let result = JSON.parse(Utils.stringify(defaultData[key], config.dataExclusions));\r\n        if (!Utils.isEmpty(result)) {\r\n          context.event.data[key] = result;\r\n        }\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class ErrorPlugin implements IEventPlugin {\r\n  public priority: number = 30;\r\n  public name: string = 'ErrorPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    const ERROR_KEY: string = '@error'; // optimization for minifier.\r\n    let ignoredProperties: string[] = [\r\n      'arguments',\r\n      'column',\r\n      'columnNumber',\r\n      'description',\r\n      'fileName',\r\n      'message',\r\n      'name',\r\n      'number',\r\n      'line',\r\n      'lineNumber',\r\n      'opera#sourceloc',\r\n      'sourceId',\r\n      'sourceURL',\r\n      'stack',\r\n      'stackArray',\r\n      'stacktrace'\r\n    ];\r\n\r\n    let exception = context.contextData.getException();\r\n    if (!!exception) {\r\n      context.event.type = 'error';\r\n\r\n      if (!context.event.data[ERROR_KEY]) {\r\n        let config = context.client.config;\r\n        let parser = config.errorParser;\r\n        if (!parser) {\r\n          throw new Error('No error parser was defined.');\r\n        }\r\n\r\n        let result = parser.parse(context, exception);\r\n        if (!!result) {\r\n          let additionalData = JSON.parse(Utils.stringify(exception, config.dataExclusions.concat(ignoredProperties)));\r\n          if (!Utils.isEmpty(additionalData)) {\r\n            if (!result.data) {\r\n              result.data = {};\r\n            }\r\n            result.data['@ext'] = additionalData;\r\n          }\r\n\r\n          context.event.data[ERROR_KEY] = result;\r\n        }\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                             \r\n\r\nexport class ModuleInfoPlugin implements IEventPlugin {\r\n  public priority: number = 50;\r\n  public name: string = 'ModuleInfoPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    const ERROR_KEY: string = '@error'; // optimization for minifier.\r\n\r\n    let collector = context.client.config.moduleCollector;\r\n    if (context.event.data[ERROR_KEY] && !context.event.data['@error'].modules && !!collector) {\r\n      let modules: IModule[] = collector.getModules(context);\r\n      if (modules && modules.length > 0) {\r\n        context.event.data[ERROR_KEY].modules = modules;\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                             \r\n\r\nexport class RequestInfoPlugin implements IEventPlugin {\r\n  public priority: number = 70;\r\n  public name: string = 'RequestInfoPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    const REQUEST_KEY: string = '@request'; // optimization for minifier.\r\n\r\n    let config = context.client.config;\r\n    let collector = config.requestInfoCollector;\r\n    if (!context.event.data[REQUEST_KEY] && !!collector) {\r\n      let requestInfo: IRequestInfo = collector.getRequestInfo(context);\r\n      if (!!requestInfo) {\r\n        if (Utils.isMatch(requestInfo.user_agent, config.userAgentBotPatterns)) {\r\n          context.log.info('Cancelling event as the request user agent matches a known bot pattern');\r\n          context.cancelled = true;\r\n        } else {\r\n          context.event.data[REQUEST_KEY] = requestInfo;\r\n        }\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                               \r\n\r\nexport class EnvironmentInfoPlugin implements IEventPlugin {\r\n  public priority: number = 80;\r\n  public name: string = 'EnvironmentInfoPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    const ENVIRONMENT_KEY: string = '@environment'; // optimization for minifier.\r\n\r\n    let collector = context.client.config.environmentInfoCollector;\r\n    if (!context.event.data[ENVIRONMENT_KEY] && collector) {\r\n      let environmentInfo: IEnvironmentInfo = collector.getEnvironmentInfo(context);\r\n      if (!!environmentInfo) {\r\n        context.event.data[ENVIRONMENT_KEY] = environmentInfo;\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                            \r\n\r\nexport class SubmissionMethodPlugin implements IEventPlugin {\r\n  public priority: number = 100;\r\n  public name: string = 'SubmissionMethodPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    let submissionMethod: string = context.contextData.getSubmissionMethod();\r\n    if (!!submissionMethod) {\r\n      context.event.data['@submission_method'] = submissionMethod;\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\n                                                                                                                                                                                                           \r\n\r\nexport class DuplicateCheckerPlugin implements IEventPlugin {\r\n  public priority: number = 1010;\r\n  public name: string = 'DuplicateCheckerPlugin';\r\n\r\n  private _mergedEvents: MergedEvent[] = [];\r\n  private _processedHashcodes: TimestampedHash[] = [];\r\n  private _getCurrentTime: () => number;\r\n  private _interval: number;\r\n\r\n  constructor(getCurrentTime: () => number = () => Date.now(), interval: number = 30000) {\r\n    this._getCurrentTime = getCurrentTime;\r\n    this._interval = interval;\r\n\r\n    setInterval(() => {\r\n      while (this._mergedEvents.length > 0) {\r\n        this._mergedEvents.shift().resubmit();\r\n      }\r\n    }, interval);\r\n  }\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    function getHashCode(error: IInnerError): number {\r\n      let hashCode = 0;\r\n      while (error) {\r\n        if (error.message && error.message.length) {\r\n          hashCode += (hashCode * 397) ^ Utils.getHashCode(error.message);\r\n        }\r\n        if (error.stack_trace && error.stack_trace.length) {\r\n          hashCode += (hashCode * 397) ^ Utils.getHashCode(JSON.stringify(error.stack_trace));\r\n        }\r\n        error = error.inner;\r\n      }\r\n\r\n      return hashCode;\r\n    }\r\n\r\n    let error = context.event.data['@error'];\r\n    let hashCode = getHashCode(error);\r\n    if (hashCode) {\r\n      let count = context.event.count || 1;\r\n      let now = this._getCurrentTime();\r\n\r\n      let merged = this._mergedEvents.filter(s => s.hashCode === hashCode)[0];\r\n      if (merged) {\r\n        merged.incrementCount(count);\r\n        merged.updateDate(context.event.date);\r\n        context.log.info('Ignoring duplicate event with hash: ' + hashCode);\r\n        context.cancelled = true;\r\n      }\r\n\r\n      if (!context.cancelled && this._processedHashcodes.some(h => h.hash === hashCode && h.timestamp >= (now - this._interval))) {\r\n        context.log.trace('Adding event with hash: ' + hashCode);\r\n        this._mergedEvents.push(new MergedEvent(hashCode, context, count));\r\n        context.cancelled = true;\r\n      }\r\n\r\n      if (!context.cancelled) {\r\n        context.log.trace('Enqueueing event with hash: ' + hashCode + 'to cache.');\r\n        this._processedHashcodes.push({ hash: hashCode, timestamp: now });\r\n\r\n        // Only keep the last 50 recent errors.\r\n        while (this._processedHashcodes.length > 50) {\r\n          this._processedHashcodes.shift();\r\n        }\r\n      }\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\r\ninterface TimestampedHash {\r\n  hash: number;\r\n  timestamp: number;\r\n}\r\n\r\nclass MergedEvent {\r\n  public hashCode: number;\r\n  private _count: number;\r\n  private _context: EventPluginContext;\r\n\r\n  constructor(hashCode: number, context: EventPluginContext, count: number) {\r\n    this.hashCode = hashCode;\r\n    this._context = context;\r\n    this._count = count;\r\n  }\r\n\r\n  public incrementCount(count: number) {\r\n    this._count += count;\r\n  }\r\n\r\n  public resubmit() {\r\n    this._context.event.count = this._count;\r\n    this._context.client.config.queue.enqueue(this._context.event);\r\n  }\r\n\r\n  public updateDate(date) {\r\n    if (date > this._context.event.date) {\r\n      this._context.event.date = date;\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                                                                           \r\n\r\nexport class EventExclusionPlugin implements IEventPlugin {\r\n  public priority: number = 45;\r\n  public name: string = 'EventExclusionPlugin';\r\n\r\n  public run(context: EventPluginContext, next?: () => void): void {\r\n    function getLogLevel(level: string): number {\r\n      switch ((level || '').toLowerCase().trim()) {\r\n        case 'trace':\r\n        case 'true':\r\n        case '1':\r\n        case 'yes':\r\n          return 0;\r\n        case 'debug':\r\n          return 1;\r\n        case 'info':\r\n          return 2;\r\n        case 'warn':\r\n          return 3;\r\n        case 'error':\r\n          return 4;\r\n        case 'fatal':\r\n          return 5;\r\n        case 'off':\r\n        case 'false':\r\n        case '0':\r\n        case 'no':\r\n          return 6;\r\n        default:\r\n          return -1;\r\n      }\r\n    }\r\n\r\n    function getMinLogLevel(settings: Object, loggerName: string = '*'): number {\r\n      return getLogLevel(getTypeAndSourceSetting(settings, 'log', loggerName, 'Trace') + '');\r\n    }\r\n\r\n    function getTypeAndSourceSetting(settings: Object = {}, type: string, source: string, defaultValue: string|boolean = undefined): string|boolean {\r\n      if (!type) {\r\n        return defaultValue;\r\n      }\r\n\r\n      let isLog = type === 'log';\r\n      let sourcePrefix =  `@@${type}:`;\r\n\r\n      let value = settings[sourcePrefix + source];\r\n      if (value) {\r\n        return !isLog ? Utils.toBoolean(value) : value;\r\n      }\r\n\r\n      // check for wildcard match\r\n      for (let key in settings) {\r\n        if (Utils.startsWith(key.toLowerCase(), sourcePrefix.toLowerCase()) && Utils.isMatch(source, [key.substring(sourcePrefix.length)])) {\r\n          return !isLog ? Utils.toBoolean(settings[key]) : settings[key];\r\n        }\r\n      }\r\n\r\n      return defaultValue;\r\n    }\r\n\r\n    let ev = context.event;\r\n    let log = context.log;\r\n    let settings = context.client.config.settings;\r\n\r\n    if (ev.type === 'log') {\r\n      let minLogLevel = getMinLogLevel(settings, ev.source);\r\n      let logLevel = getLogLevel(ev.data['@level']);\r\n\r\n      if (logLevel >= 0 && (logLevel > 5 || logLevel < minLogLevel)) {\r\n        log.info('Cancelling log event due to minimum log level.');\r\n        context.cancelled = true;\r\n      }\r\n    } else if (ev.type === 'error') {\r\n      let error: IInnerError = ev.data['@error'];\r\n      while (!context.cancelled && error) {\r\n        if (getTypeAndSourceSetting(settings, ev.type, error.type, true) === false) {\r\n          log.info(`Cancelling error from excluded exception type: ${error.type}`);\r\n          context.cancelled = true;\r\n        }\r\n\r\n        error = error.inner;\r\n      }\r\n    } else if (getTypeAndSourceSetting(settings, ev.type, ev.source, true) === false) {\r\n      log.info(`Cancelling event from excluded type: ${ev.type} and source: ${ev.source}`);\r\n      context.cancelled = true;\r\n    }\r\n\r\n    next && next();\r\n  }\r\n}\r\n\nexport class SettingsResponse {\r\n  public success: boolean = false;\r\n  public settings: any;\r\n  public settingsVersion: number = -1;\r\n  public message: string;\r\n  public exception: any;\r\n\r\n  constructor(success: boolean, settings: any, settingsVersion: number = -1, exception: any = null, message: string = null) {\r\n    this.success = success;\r\n    this.settings = settings;\r\n    this.settingsVersion = settingsVersion;\r\n    this.exception = exception;\r\n    this.message = message;\r\n  }\r\n}\r\n\n                                                                                  \r\n\r\nexport interface IError extends IInnerError {\r\n  modules?: IModule[];\r\n}\r\n\nexport interface IStorageItem {\r\n  timestamp: number;\r\n  value: any;\r\n}\r\n\n                                              \r\n\r\nexport interface IStorage {\r\n  save(value: any): number;\r\n  get(limit?: number): IStorageItem[];\r\n  remove(timestamp: number): void;\r\n  clear(): void;\r\n}\r\n\nexport interface SubmissionCallback {\r\n  (status: number, message: string, data?: string, headers?: Object): void;\r\n}\r\n\nexport interface SubmissionRequest {\r\n  apiKey: string;\r\n  userAgent: string;\r\n  method: string;\r\n  url: string;\r\n  data: string;\r\n}\r\n\n                                                                                      \r\n\r\nexport class InMemoryStorage implements IStorage {\r\n  private maxItems: number;\r\n  private items: IStorageItem[] = [];\r\n  private lastTimestamp: number = 0;\r\n\r\n  constructor(maxItems: number) {\r\n    this.maxItems = maxItems;\r\n  }\r\n\r\n  public save(value: any): number {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    let items = this.items;\r\n    let timestamp = Math.max(Date.now(), this.lastTimestamp + 1);\r\n    let item = { timestamp, value };\r\n\r\n    if (items.push(item) > this.maxItems) {\r\n      items.shift();\r\n    }\r\n\r\n    this.lastTimestamp = timestamp;\r\n    return item.timestamp;\r\n  }\r\n\r\n  public get(limit?: number): IStorageItem[] {\r\n    return this.items.slice(0, limit);\r\n  }\r\n\r\n  public remove(timestamp: number): void {\r\n    let items = this.items;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].timestamp === timestamp) {\r\n        items.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  public clear(): void {\r\n    this.items = [];\r\n  }\r\n}\r\n\nexport interface IClientConfiguration {\r\n  settings: Object;\r\n  version: number;\r\n}\r\n\n                                                                                      \r\n\r\nexport abstract class KeyValueStorageBase implements IStorage {\r\n  private maxItems: number;\r\n  private items: number[];\r\n  private lastTimestamp: number = 0;\r\n\r\n  constructor(maxItems) {\r\n    this.maxItems = maxItems;\r\n  }\r\n\r\n  public save(value: any, single?: boolean): number {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    this.ensureIndex();\r\n\r\n    let items = this.items;\r\n    let timestamp = Math.max(Date.now(), this.lastTimestamp + 1);\r\n    let key = this.getKey(timestamp);\r\n    let json = JSON.stringify(value);\r\n\r\n    try {\r\n      this.write(key, json);\r\n      this.lastTimestamp = timestamp;\r\n      if (items.push(timestamp) > this.maxItems) {\r\n        this.delete(this.getKey(items.shift()));\r\n      }\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n\r\n    return timestamp;\r\n  }\r\n\r\n  public get(limit?: number): IStorageItem[] {\r\n    this.ensureIndex();\r\n\r\n    return this.items.slice(0, limit)\r\n      .map(timestamp => {\r\n        // Read and parse item for this timestamp\r\n        let key = this.getKey(timestamp);\r\n        try {\r\n          let json = this.read(key);\r\n          let value = JSON.parse(json, parseDate);\r\n          return { timestamp, value };\r\n        } catch (error) {\r\n          // Something went wrong - try to delete the cause.\r\n          this.safeDelete(key);\r\n          return null;\r\n        }\r\n      })\r\n      .filter(item => item != null);\r\n  }\r\n\r\n  public remove(timestamp: number): void {\r\n    this.ensureIndex();\r\n\r\n    let items = this.items;\r\n    let index = items.indexOf(timestamp);\r\n    if (index >= 0) {\r\n      let key = this.getKey(timestamp);\r\n      this.safeDelete(key);\r\n      items.splice(index, 1);\r\n    };\r\n  }\r\n\r\n  public clear(): void {\r\n    this.items.forEach(item => this.safeDelete(this.getKey(item)));\r\n    this.items = [];\r\n  }\r\n\r\n  protected abstract write(key: string, value: string): void;\r\n  protected abstract read(key: string): string;\r\n  protected abstract readAllKeys(): string[];\r\n  protected abstract delete(key: string);\r\n  protected abstract getKey(timestamp: number): string;\r\n  protected abstract getTimestamp(key: string): number;\r\n\r\n  private ensureIndex() {\r\n    if (!this.items) {\r\n      this.items = this.createIndex();\r\n      this.lastTimestamp = Math.max(0, ...this.items) + 1;\r\n    }\r\n  }\r\n\r\n  private safeDelete(key: string): void {\r\n    try {\r\n      this.delete(key);\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  private createIndex() {\r\n    try {\r\n      let keys = this.readAllKeys();\r\n      return keys.map(key => {\r\n        try {\r\n          let timestamp = this.getTimestamp(key);\r\n          if (!timestamp) {\r\n            this.safeDelete(key);\r\n            return null;\r\n          }\r\n          return timestamp;\r\n        } catch (error) {\r\n          this.safeDelete(key);\r\n          return null;\r\n        }\r\n      }).filter(timestamp => timestamp != null)\r\n        .sort((a, b) => a - b);\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseDate(key, value) {\r\n  let dateRegx = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/g;\r\n  if (typeof value === 'string') {\r\n    let a = dateRegx.exec(value);\r\n    if (a) {\r\n      return new Date(value);\r\n    }\r\n  }\r\n  return value;\r\n};\r\n\n                                                            \r\n\r\nexport class BrowserStorage extends KeyValueStorageBase {\r\n  private prefix: string;\r\n\r\n  public static isAvailable(): boolean {\r\n    try {\r\n      let storage = window.localStorage,\r\n        x = '__storage_test__';\r\n      storage.setItem(x, x);\r\n      storage.removeItem(x);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  constructor(namespace: string, prefix: string = 'com.exceptionless.', maxItems: number = 20) {\r\n    super(maxItems);\r\n\r\n    this.prefix = prefix + namespace + '-';\r\n  }\r\n\r\n  public write(key: string, value: string) {\r\n    window.localStorage.setItem(key, value);\r\n  }\r\n\r\n  public read(key: string) {\r\n    return window.localStorage.getItem(key);\r\n  }\r\n\r\n  public readAllKeys() {\r\n    return Object.keys(window.localStorage)\r\n      .filter(key => key.indexOf(this.prefix) === 0);\r\n  }\r\n\r\n  public delete(key: string) {\r\n    window.localStorage.removeItem(key);\r\n  }\r\n\r\n  public getKey(timestamp) {\r\n    return this.prefix + timestamp;\r\n  }\r\n\r\n  public getTimestamp(key) {\r\n    return parseInt(key.substr(this.prefix.length), 10);\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                                                                                                \r\n\r\nexport class DefaultErrorParser implements IErrorParser {\r\n  public parse(context: EventPluginContext, exception: Error): IError {\r\n    function getParameters(parameters: string | string[]): IParameter[] {\r\n      let params: string[] = (typeof parameters === 'string' ? [parameters] : parameters) || [];\r\n\r\n      let result: IParameter[] = [];\r\n      for (let index = 0; index < params.length; index++) {\r\n        result.push({ name: params[index] });\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    function getStackFrames(stackFrames: TraceKit.StackFrame[]): IStackFrame[] {\r\n      const ANONYMOUS: string = '<anonymous>';\r\n      let frames: IStackFrame[] = [];\r\n\r\n      for (let index = 0; index < stackFrames.length; index++) {\r\n        let frame = stackFrames[index];\r\n        frames.push({\r\n          name: (frame.func || ANONYMOUS).replace('?', ANONYMOUS),\r\n          parameters: getParameters(frame.args),\r\n          file_name: frame.url,\r\n          line_number: frame.line || 0,\r\n          column: frame.column || 0\r\n        });\r\n      }\r\n\r\n      return frames;\r\n    }\r\n\r\n    const TRACEKIT_STACK_TRACE_KEY: string = '@@_TraceKit.StackTrace'; // optimization for minifier.\r\n\r\n    let stackTrace: TraceKit.StackTrace = !!context.contextData[TRACEKIT_STACK_TRACE_KEY]\r\n      ? context.contextData[TRACEKIT_STACK_TRACE_KEY]\r\n      : TraceKit.computeStackTrace(exception, 25);\r\n\r\n    if (!stackTrace) {\r\n      throw new Error('Unable to parse the exceptions stack trace.');\r\n    }\r\n\r\n    return {\r\n      type: stackTrace.name,\r\n      message: stackTrace.message || exception.message,\r\n      stack_trace: getStackFrames(stackTrace.stack || [])\r\n    };\r\n  }\r\n}\r\n\n                                                                                                                                                                                                            \r\n\r\nexport class DefaultModuleCollector implements IModuleCollector {\r\n  public getModules(context: EventPluginContext): IModule[] {\r\n    if (document && document.getElementsByTagName) {\r\n      return null;\r\n    }\r\n\r\n    let modules: IModule[] = [];\r\n    let scripts: NodeListOf<HTMLScriptElement> = document.getElementsByTagName('script');\r\n    if (scripts && scripts.length > 0) {\r\n      for (let index = 0; index < scripts.length; index++) {\r\n        if (scripts[index].src) {\r\n          modules.push({\r\n            module_id: index,\r\n            name: scripts[index].src,\r\n            version: Utils.parseVersion(scripts[index].src)\r\n          });\r\n        } else if (!!scripts[index].innerHTML) {\r\n          modules.push({\r\n            module_id: index,\r\n            name: 'Script Tag',\r\n            version: Utils.getHashCode(scripts[index].innerHTML).toString()\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return modules;\r\n  }\r\n}\r\n\n                                                                                                                                                                                                                                \r\n\r\nexport class DefaultRequestInfoCollector implements IRequestInfoCollector {\r\n  public getRequestInfo(context: EventPluginContext): IRequestInfo {\r\n    if (!document || !navigator || !location) {\r\n      return null;\r\n    }\r\n\r\n    let exclusions = context.client.config.dataExclusions;\r\n    let requestInfo: IRequestInfo = {\r\n      user_agent: navigator.userAgent,\r\n      is_secure: location.protocol === 'https:',\r\n      host: location.hostname,\r\n      port: location.port && location.port !== '' ? parseInt(location.port, 10) : 80,\r\n      path: location.pathname,\r\n      // client_ip_address: 'TODO',\r\n      cookies: Utils.getCookies(document.cookie, exclusions),\r\n      query_string: Utils.parseQueryString(location.search.substring(1), exclusions)\r\n    };\r\n\r\n    if (document.referrer && document.referrer !== '') {\r\n      requestInfo.referrer = document.referrer;\r\n    }\r\n\r\n    return requestInfo;\r\n  }\r\n}\r\n\n                                                                                                                                                                                \r\n\r\ndeclare var XDomainRequest: { new (); create(); };\r\n\r\nexport class DefaultSubmissionAdapter implements ISubmissionAdapter {\r\n  public sendRequest(request: SubmissionRequest, callback?: SubmissionCallback, isAppExiting?: boolean) {\r\n    // TODO: Handle sending events when app is exiting with send beacon.\r\n    const TIMEOUT: string = 'timeout';  // optimization for minifier.\r\n    const LOADED: string = 'loaded';  // optimization for minifier.\r\n    const WITH_CREDENTIALS: string = 'withCredentials';  // optimization for minifier.\r\n\r\n    let isCompleted: boolean = false;\r\n    let useSetTimeout: boolean = false;\r\n    function complete(mode: string, xhr: XMLHttpRequest) {\r\n      function parseResponseHeaders(headerStr) {\r\n        function trim(value) {\r\n          return value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n        }\r\n\r\n        let headers = {};\r\n        let headerPairs = (headerStr || '').split('\\u000d\\u000a');\r\n        for (let index: number = 0; index < headerPairs.length; index++) {\r\n          let headerPair = headerPairs[index];\r\n          // Can't use split() here because it does the wrong thing\r\n          // if the header value has the string \": \" in it.\r\n          let separator = headerPair.indexOf('\\u003a\\u0020');\r\n          if (separator > 0) {\r\n            headers[trim(headerPair.substring(0, separator).toLowerCase())] = headerPair.substring(separator + 2);\r\n          }\r\n        }\r\n\r\n        return headers;\r\n      }\r\n\r\n      if (isCompleted) {\r\n        return;\r\n      }\r\n\r\n      isCompleted = true;\r\n\r\n      let message: string = xhr.statusText;\r\n      let responseText: string = xhr.responseText;\r\n      let status: number = xhr.status;\r\n\r\n      if (mode === TIMEOUT || status === 0) {\r\n        message = 'Unable to connect to server.';\r\n        status = 0;\r\n      } else if (mode === LOADED && !status) {\r\n        status = request.method === 'POST' ? 202 : 200;\r\n      } else if (status < 200 || status > 299) {\r\n        let responseBody: any = xhr.responseBody;\r\n        if (!!responseBody && !!responseBody.message) {\r\n          message = responseBody.message;\r\n        } else if (!!responseText && responseText.indexOf('message') !== -1) {\r\n          try {\r\n            message = JSON.parse(responseText).message;\r\n          } catch (e) {\r\n            message = responseText;\r\n          }\r\n        }\r\n      }\r\n\r\n      callback && callback(status || 500, message || '', responseText, parseResponseHeaders(xhr.getAllResponseHeaders && xhr.getAllResponseHeaders()));\r\n    }\r\n\r\n    function createRequest(userAgent: string, method: string, url: string): XMLHttpRequest {\r\n      let xhr: any = new XMLHttpRequest();\r\n      if (WITH_CREDENTIALS in xhr) {\r\n        xhr.open(method, url, true);\r\n\r\n        xhr.setRequestHeader('X-Exceptionless-Client', userAgent);\r\n        if (method === 'POST') {\r\n          xhr.setRequestHeader('Content-Type', 'application/json');\r\n        }\r\n      } else if (typeof XDomainRequest !== 'undefined') {\r\n        useSetTimeout = true;\r\n        xhr = new XDomainRequest();\r\n        xhr.open(method, location.protocol === 'http:' ? url.replace('https:', 'http:') : url);\r\n      } else {\r\n        xhr = null;\r\n      }\r\n\r\n      if (xhr) {\r\n        xhr.timeout = 10000;\r\n      }\r\n\r\n      return xhr;\r\n    }\r\n\r\n    let url = `${request.url}${(request.url.indexOf('?') === -1 ? '?' : '&')}access_token=${encodeURIComponent(request.apiKey)}`;\r\n    let xhr = createRequest(request.userAgent, request.method || 'POST', url);\r\n    if (!xhr) {\r\n      return (callback && callback(503, 'CORS not supported.'));\r\n    }\r\n\r\n    if (WITH_CREDENTIALS in xhr) {\r\n      xhr.onreadystatechange = () => {\r\n        // xhr not ready.\r\n        if (xhr.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        complete(LOADED, xhr);\r\n      };\r\n    }\r\n\r\n    xhr.onprogress = () => { };\r\n    xhr.ontimeout = () => complete(TIMEOUT, xhr);\r\n    xhr.onerror = () => complete('error', xhr);\r\n    xhr.onload = () => complete(LOADED, xhr);\r\n\r\n    if (useSetTimeout) {\r\n      setTimeout(() => xhr.send(request.data), 500);\r\n    } else {\r\n      xhr.send(request.data);\r\n    }\r\n  }\r\n}\r\n\n                                                                                                                                                  \r\n\r\nexport class BrowserStorageProvider implements IStorageProvider {\r\n  public queue: IStorage;\r\n  public settings: IStorage;\r\n\r\n  constructor(prefix?: string, maxQueueItems: number = 250) {\r\n    this.queue = new BrowserStorage('q', prefix, maxQueueItems);\r\n    this.settings = new BrowserStorage('settings', prefix, 1);\r\n  }\r\n\r\n}\r\n\nr\n\r\nfunction getDefaultsSettingsFromScriptTag(): IConfigurationSettings {\r\n  if (!document || !document.getElementsByTagName) {\r\n    return null;\r\n  }\r\n\r\n  let scripts = document.getElementsByTagName('script');\r\n  for (let index = 0; index < scripts.length; index++) {\r\n    if (scripts[index].src && scripts[index].src.indexOf('/exceptionless') > -1) {\r\n      return Utils.parseQueryString(scripts[index].src.split('?').pop());\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction processUnhandledException(stackTrace: TraceKit.StackTrace, options?: any): void {\r\n  let builder = ExceptionlessClient.default.createUnhandledException(new Error(stackTrace.message || (options || {}).status || 'Script error'), 'onerror');\r\n  builder.pluginContextData['@@_TraceKit.StackTrace'] = stackTrace;\r\n  builder.submit();\r\n}\r\n\r\n/*\r\nTODO: We currently are unable to parse string exceptions.\r\nfunction processJQueryAjaxError(event, xhr, settings, error:string): void {\r\n  let client = ExceptionlessClient.default;\r\n  if (xhr.status === 404) {\r\n    client.submitNotFound(settings.url);\r\n  } else if (xhr.status !== 401) {\r\n    client.createUnhandledException(error, 'JQuery.ajaxError')\r\n      .setSource(settings.url)\r\n      .setProperty('status', xhr.status)\r\n      .setProperty('request', settings.data)\r\n      .setProperty('response', xhr.responseText && xhr.responseText.slice && xhr.responseText.slice(0, 1024))\r\n      .submit();\r\n  }\r\n}\r\n*/\r\n\r\nConfiguration.prototype.useLocalStorage = function() {\r\n  if (BrowserStorage.isAvailable()) {\r\n    this.storage = new BrowserStorageProvider();\r\n    SettingsManager.applySavedServerSettings(this);\r\n    this.changed();\r\n  }\r\n};\r\n\r\nlet defaults = Configuration.defaults;\r\nlet settings = getDefaultsSettingsFromScriptTag();\r\nif (settings && (settings.apiKey || settings.serverUrl)) {\r\n  defaults.apiKey = settings.apiKey;\r\n  defaults.serverUrl = settings.serverUrl;\r\n}\r\n\r\ndefaults.errorParser = new DefaultErrorParser();\r\ndefaults.moduleCollector = new DefaultModuleCollector();\r\ndefaults.requestInfoCollector = new DefaultRequestInfoCollector();\r\ndefaults.submissionAdapter = new DefaultSubmissionAdapter();\r\n\r\nTraceKit.report.subscribe(processUnhandledException);\r\nTraceKit.extendToAsynchronousCallbacks();\r\n\r\n// window && window.addEventListener && window.addEventListener('beforeunload', function () {\r\n//   ExceptionlessClient.default.config.queue.process(true);\r\n// });\r\n\r\n// if (typeof $ !== 'undefined' && $(document)) {\r\n//   $(document).ajaxError(processJQueryAjaxError);\r\n// }\r\n\r\n(<any>Error).stackTraceLimit = Infinity;\r\n\r\ndeclare var $;\r\n\n"],"sourceRoot":"/source/"}