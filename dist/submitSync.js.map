{"version":3,"file":"submitSync.js","sources":["submitSync.ts"],"names":[],"mappings":"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","sourcesContent":["import child = require(\"child_process\");\nimport http = require(\"http\");\nimport https = require(\"https\");\nimport url = require(\"url\");\nimport * as stream from \"stream\";\nimport { StringDecoder } from \"string_decoder\";\nexport type SubmissionCallback = (\n  status: number,\n  message: string,\n  data?: string,\n  headers?: object\n) => void;\n\nexport interface SubmissionRequest {\n  apiKey: string;\n  userAgent: string;\n  method: string;\n  url: string;\n  data: string;\n}\n\nexport interface ISubmissionAdapter {\n  sendRequest(\n    request: SubmissionRequest,\n    callback?: SubmissionCallback,\n    isAppExiting?: boolean\n  ): void;\n}\n\nexport class NodeSubmissionAdapter implements ISubmissionAdapter {\n  public sendRequest(\n    request: SubmissionRequest,\n    callback?: SubmissionCallback,\n    isAppExiting?: boolean\n  ) {\n    if (isAppExiting) {\n      this.sendRequestSync(request, callback);\n      return;\n    }\n\n    const parsedHost = url.parse(request.url);\n\n    const options: https.RequestOptions = {\n      auth: `client:${request.apiKey}`,\n      headers: {},\n      hostname: parsedHost.hostname,\n      method: request.method,\n      port: parsedHost.port && parseInt(parsedHost.port, 10),\n      path: request.url,\n    };\n\n    options.headers[\"User-Agent\"] = request.userAgent;\n\n    if (request.method === \"POST\") {\n      options.headers = {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(request.data),\n      };\n    }\n\n    const protocol: any = parsedHost.protocol === \"https:\" ? https : http;\n    const clientRequest: http.ClientRequest = protocol.request(\n      options,\n      (response: http.IncomingMessage) => {\n        let body = \"\";\n        response.setEncoding(\"utf8\");\n        response.on(\"data\", (chunk) => (body += chunk));\n        response.on(\"end\", () =>\n          this.complete(response, body, response.headers, callback)\n        );\n      }\n    );\n\n    clientRequest.on(\n      \"error\",\n      (error: Error) => callback && callback(500, error.message)\n    );\n    clientRequest.end(request.data);\n  }\n\n  private complete(\n    response: http.IncomingMessage,\n    responseBody: string,\n    responseHeaders: object,\n    callback: SubmissionCallback\n  ): void {\n    let message: string;\n    if (response.statusCode === 0) {\n      message = \"Unable to connect to server.\";\n    } else if (response.statusCode < 200 || response.statusCode > 299) {\n      message = response.statusMessage || (response as any).message;\n    }\n\n    callback &&\n      callback(\n        response.statusCode || 500,\n        message,\n        responseBody,\n        responseHeaders\n      );\n  }\n\n  private sendRequestSync(\n    request: SubmissionRequest,\n    callback: SubmissionCallback\n  ): void {\n    const requestJson = JSON.stringify(request);\n    const res = child.spawnSync(\n      process.execPath,\n      [require.resolve(\"./submitSync.js\")],\n      {\n        input: requestJson,\n        stdio: [\"pipe\", \"pipe\", process.stderr],\n      }\n    );\n\n    const out = res.stdout.toString();\n    const result = JSON.parse(out);\n\n    callback &&\n      callback(result.status, result.message, result.data, result.headers);\n  }\n}\n\nconst decoder = new StringDecoder(\"utf8\");\nconst strings: string[] = [];\n\nconst jsonStream = new stream.Writable();\n(jsonStream as any)._write = (\n  chunk: Buffer | string,\n  encoding: string,\n  next: () => void\n) => {\n  strings.push(decoder.write(chunk as Buffer));\n  next();\n};\n\njsonStream.on(\"finish\", () => {\n  const json = strings.join(\"\");\n  const request: SubmissionRequest = JSON.parse(json);\n  const adapter = new NodeSubmissionAdapter();\n  adapter.sendRequest(request, (status, message, data, headers) => {\n    const result = {\n      status,\n      message,\n      data,\n      headers,\n    };\n    process.stdout.write(JSON.stringify(result));\n    process.exit(0);\n  });\n});\n\nprocess.stdin.pipe(jsonStream);\n"],"preExistingComment":"submitSync.js.map"}